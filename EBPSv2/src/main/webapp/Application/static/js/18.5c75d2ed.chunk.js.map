{"version":3,"sources":["components/CompletedList.tsx"],"names":["dash_lang","dashboardLang","dashboard_data","CompletedList","props","_this","Object","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","tableRef","React","cellClass","row","dataField","cellText","rowData","cellValue","columnValue","datafield","name","type","columns","text","cellsalign","align","width","TableWidths","APPLICATION_NO","pinned","MOBILE_NO","APPLICATION_ACTION_BY","filtertype","CONSTRUCTION_TYPE","state","langModalOpen","onSelectionInfo","bind","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","setLangModalOpen","document","title","concat","isEmpty","getLocalStorage","KEYBOARD","setState","getCompletedList","value","buildPermits","formattedData","Array","isArray","JSON","parse","stringify","forEach","permit","applicationActionBy","getUserTypeValueNepali","constructionType","getConstructionTypeText","applicationAction","formName","react__WEBPACK_IMPORTED_MODULE_5__","_shared_modals_KeyboardSelectionModal__WEBPACK_IMPORTED_MODULE_20__","errors","_shared_ErrorDisplay__WEBPACK_IMPORTED_MODULE_14__","message","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","active","loadingnestedNumbers","inverted","page","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","loading","inline","getMessage","datafetch","className","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","Content","_loggedInComponents_Grid_RootGrid__WEBPACK_IMPORTED_MODULE_19__","localdata","groupable","rowsheight","showfilterrow","onRowClick","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_10__","e","_this2","index","args","boundindex","window","scroll","currentPermit","setTimeout","history","push","id","mapDispatchToProps","getBuildingClass","setBuildPermit","connect","root","dashboard","ui"],"mappings":"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","file":"static/js/18.5c75d2ed.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Header, Icon } from 'semantic-ui-react';\nimport JqxDataTable, { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\n// Redux\nimport { connect } from 'react-redux';\nimport { getCompletedList, setBuildPermit, getBuildingClass } from '../store/actions/dashboardActions';\nimport FallbackComponent from './shared/FallbackComponent';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { isEmpty, getUserTypeValueNepali } from '../utils/functionUtils';\nimport ErrorDisplay from './shared/ErrorDisplay';\nimport { dashboardLang } from '../utils/data/dashboardLangFile';\nimport { getMessage } from './shared/getMessage';\n// import { getOptionText } from '../utils/dataUtils';\nimport { KEYBOARD } from '../utils/constants';\nimport { getLocalStorage } from '../utils/secureLS';\nimport RootGrid from './loggedInComponents/Grid/RootGrid';\nimport { KeyboardSelectionModal } from './shared/modals/KeyboardSelectionModal';\nimport { TableWidths } from '../utils/enums/ui';\n// import { constructionTypeSelectOptions } from '../utils/data/genericData';\nimport { getConstructionTypeText } from '../utils/enums/constructionType';\n\nconst dash_lang = dashboardLang.dashboard_data;\nconst messageId = 'dashboardLang.dashboard_data';\n\nclass CompletedList extends React.PureComponent<{}, IDataTableProps> {\n\tprivate tableRef = React.createRef<JqxDataTable>();\n\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t//@ts-ignore\n\t\t\tlangModalOpen: false,\n\t\t};\n\n\t\tthis.onSelectionInfo = this.onSelectionInfo.bind(this);\n\t\tthis.setLangModalOpen = this.setLangModalOpen.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.title = `${document.title} - Completed List`;\n\n\t\t// console.log(this.state, getLocalStorage(KEYBOARD));\n\t\tif (isEmpty(getLocalStorage(KEYBOARD))) {\n\t\t\t//@ts-ignore\n\t\t\tthis.setState({ langModalOpen: true });\n\t\t}\n\t\t//@ts-ignore\n\t\tthis.props.getCompletedList();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.title = 'EBPS';\n\t}\n\n\tsetLangModalOpen(value: boolean) {\n\t\t// console.log(\"values -- \", value);\n\n\t\t//@ts-ignore\n\t\tthis.setState({ langModalOpen: value });\n\t}\n\n\t// cellClassTaha = (row: any, dataField: any, cellText: any, rowData: any) => {\n\t//   const cellValue = rowData[dataField];\n\t//   if (cellValue === 'डिजाइनर') {\n\t//     return 'designer';\n\t//   } else if (cellValue === 'सब-ईन्जिनियर') {\n\t//     return 'subEngineer';\n\t//   } else if (cellValue === 'ईन्जिनियर') {\n\t//     return 'engineer';\n\t//   } else if (cellValue === 'अधिकृत') {\n\t//     return 'admin';\n\t//   } else {\n\t//     return 'others';\n\t//   }\n\t// };\n\n\tcellClass = (row: any, dataField: any, cellText: any, rowData: any) => {\n\t\tconst cellValue = rowData[dataField];\n\t\tif (cellValue === 'अस्वीकृत गरिएको') {\n\t\t\treturn 'disapproved';\n\t\t} else if (cellValue === 'स्वीकृत भएको') {\n\t\t\t// return 'approved';\n\t\t\tconst columnValue = rowData['applicationActionBy'];\n\t\t\tif (columnValue === 'डिजाइनर') {\n\t\t\t\treturn 'designer';\n\t\t\t} else if (columnValue === 'सब-ईन्जिनियर') {\n\t\t\t\treturn 'subEngineer';\n\t\t\t} else if (columnValue === 'ईन्जिनियर') {\n\t\t\t\treturn 'engineer';\n\t\t\t} else if (columnValue === 'अधिकृत') {\n\t\t\t\treturn 'admin';\n\t\t\t} else if (columnValue === 'राजस्व') {\n\t\t\t\treturn 'rajaswo';\n\t\t\t} else {\n\t\t\t\treturn 'amin';\n\t\t\t}\n\t\t} else {\n\t\t\treturn 'average';\n\t\t}\n\t};\n\n\tdatafield = [\n\t\t{ name: 'applicantNo', type: 'string' },\n\t\t{ name: 'talathapApplicationNo', type: 'string' },\n\t\t{ name: 'applicantName', type: 'string' },\n\t\t{ name: 'applicantAddress', type: 'string' },\n\t\t{ name: 'nibedakName', type: 'string' },\n\t\t{ name: 'applicantMobileNo', type: 'string' },\n\t\t{ name: 'applicationStatus', type: 'string' },\n\t\t{ name: 'applicationActionBy', type: 'string' },\n\t\t{ name: 'yourStatus', type: 'string' },\n\t\t{ name: 'applicationAction', type: 'string' },\n\t\t{ name: 'applicantDate', type: 'string' },\n\t\t{ name: 'constructionType', type: 'string' },\n\t\t{ name: 'forwardTo', type: 'string' },\n\t];\n\n\tcolumns = [\n\t\t{\n\t\t\ttext: 'शाखा दर्ता नं.',\n\t\t\tdataField: 'applicantNo',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: TableWidths.APPLICATION_NO,\n\t\t\tpinned: 'true',\n\t\t},\n\t\t{\n\t\t\ttext: 'तला थप दर्ता नं.',\n\t\t\tdataField: 'talathapApplicationNo',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: TableWidths.APPLICATION_NO,\n\t\t\tpinned: 'true',\n\t\t},\n\t\t{\n\t\t\ttext: 'जग्गाधनीको नाम',\n\t\t\tdataField: 'applicantName',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '150',\n\t\t\tpinned: 'true',\n\t\t},\n\n\t\t{\n\t\t\ttext: 'जग्गाधनीको ठेगाना',\n\t\t\tdataField: 'applicantAddress',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '150',\n\t\t},\n\t\t{\n\t\t\ttext: 'निवेदकको नाम',\n\t\t\tdataField: 'nibedakName',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '150',\n\t\t},\n\t\t{\n\t\t\ttext: 'सम्पर्क फोन.',\n\t\t\tdataField: 'applicantMobileNo',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: TableWidths.MOBILE_NO,\n\t\t},\n\t\t{\n\t\t\ttext: 'तह',\n\t\t\tdataField: 'applicationActionBy',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: TableWidths.APPLICATION_ACTION_BY,\n\t\t\tfiltertype: 'list',\n\t\t\t// cellclassname: this.cellClassTaha\n\t\t},\n\t\t{\n\t\t\ttext: 'तह स्थिति',\n\t\t\tdataField: 'forwardTo',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '250',\n\t\t\tfiltertype: 'list',\n\t\t},\n\t\t{\n\t\t\ttext: 'स्थिति फारम',\n\t\t\tdataField: 'applicationAction',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\t// width: '350',\n\t\t\tfiltertype: 'list',\n\t\t\t// cellclassname: 'alignment',\n\t\t\t// cellsrenderer: (row: any, columnfield: any, value: any, defaulthtml: any, columnproperties: any, rowdata: any): any => value.formName,\n\t\t},\n\t\t{\n\t\t\ttext: 'दर्ता मिती.',\n\t\t\tdataField: 'applicantDate',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '100',\n\t\t},\n\t\t{\n\t\t\ttext: 'भवनको किसिम',\n\t\t\tdataField: 'constructionType',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: TableWidths.CONSTRUCTION_TYPE,\n\t\t\tpinned: 'true',\n\t\t\tfiltertype: 'list',\n\t\t},\n\n\t\t// {\n\t\t// \ttext: 'पूर्ण अवस्था',\n\t\t// \tdataField: 'applicationStatus',\n\t\t// \tcellsalign: 'center',\n\t\t// \talign: 'center',\n\t\t// \twidth: TableWidths.APPLICATION_STATUS,\n\t\t// \tfiltertype: 'list',\n\t\t// },\n\t];\n\n\trender() {\n\t\t//@ts-ignore\n\t\tconst { buildPermits } = this.props;\n\n\t\tlet formattedData = [];\n\t\t//@ts-ignore\n\t\t// const userType = getUserInfoObj.userType;\n\t\t// const actionObject = getActionObject(userType)\n\t\t// console.log(\"render props\", this.props, buildPermits);\n\n\t\tif (!isEmpty(buildPermits) || Array.isArray(buildPermits)) {\n\t\t\tformattedData = JSON.parse(JSON.stringify(buildPermits));\n\t\t\tformattedData.forEach((permit: {}) => {\n\t\t\t\t//@ts-ignore\n\t\t\t\tpermit.applicationActionBy = getUserTypeValueNepali(\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tpermit.applicationActionBy\n\t\t\t\t);\n\t\t\t\t//@ts-ignore\n\t\t\t\tpermit.constructionType = getConstructionTypeText(permit.constructionType);\n\t\t\t\t//@ts-ignore\n\t\t\t\tpermit.applicationAction = permit.applicationAction ? permit.applicationAction.formName : '';\n\t\t\t});\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<KeyboardSelectionModal\n\t\t\t\t\t\tlangModalOpen={\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tthis.state.langModalOpen\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetLangModalOpen={this.setLangModalOpen}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t// for props.errors\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tthis.props.errors && (\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t<ErrorDisplay message={this.props.errors.message} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<Dimmer\n\t\t\t\t\t\tactive={\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tthis.props.loadingnestedNumbers\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinverted\n\t\t\t\t\t\tpage\n\t\t\t\t\t>\n\t\t\t\t\t\t<Loader\n\t\t\t\t\t\t\tactive={\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tthis.props.loading\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinline=\"centered\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{getMessage(`${messageId}.datafetch`, dash_lang.datafetch)}\n\t\t\t\t\t\t</Loader>\n\t\t\t\t\t</Dimmer>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t<Header>\n\t\t\t\t\t\t\t<Icon name=\"list alternate\" />\n\t\t\t\t\t\t\t<Header.Content>Add Storey List</Header.Content>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<div className=\"pointer\">\n\t\t\t\t\t\t\t{/* \n              // @ts-ignore */}\n\t\t\t\t\t\t\t<RootGrid\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tlocaldata={formattedData}\n\t\t\t\t\t\t\t\tdatafield={this.datafield}\n\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\tgroupable={false}\n\t\t\t\t\t\t\t\trowsheight={60}\n\t\t\t\t\t\t\t\tshowfilterrow={true}\n\t\t\t\t\t\t\t\t// autorowheight={true}\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tonRowClick={\n\t\t\t\t\t\t\t\t\t// e => {\n\t\t\t\t\t\t\t\t\t// console.log(e);\n\t\t\t\t\t\t\t\t\tthis.onSelectionInfo\n\t\t\t\t\t\t\t\t\t// (e);\n\t\t\t\t\t\t\t\t\t// console.log(e);\n\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<FallbackComponent\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\terrors={this.props.errors}\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tloading={this.props.loading}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t//@ts-ignore\n\tprivate onSelectionInfo(e) {\n\t\t// gets selected row indexes. The method returns an Array of indexes.\n\t\tconst index = e.args.row.boundindex;\n\n\t\twindow.scroll(0, 0);\n\t\t//@ts-ignore\n\t\tconst currentPermit = this.props.buildPermits[index];\n\t\tsetTimeout(() => {\n\t\t\t//@ts-ignore\n\t\t\tthis.props.history.push(`/user/building-permit-tallathap/${currentPermit.id}`);\n\t\t}, 1000);\n\t}\n}\n\nconst mapDispatchToProps = { getCompletedList, getBuildingClass, setBuildPermit };\n//@ts-ignore\nconst mapStateToProps = (state) => ({\n\tbuildPermits: state.root.dashboard.buildPermits,\n\tcurrentPermit: state.root.dashboard.currentPermit,\n\terrors: state.root.ui.errors,\n\tloading: state.root.ui.loading,\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedList);\n"],"sourceRoot":""}