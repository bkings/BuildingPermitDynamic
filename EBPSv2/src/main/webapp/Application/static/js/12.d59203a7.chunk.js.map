{"version":3,"sources":["components/ebps-setup/forms/GenericTableOneButton.tsx","components/ebps-setup/shared/ApplicationDetails.js","components/ebps-setup/forms/GenericSetupTable.tsx","../node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js","../node_modules/semantic-ui-react/dist/es/modules/Tab/Tab.js","utils/data/ebps-setup/tallaThapData.js","components/ebps-setup/TallaThapHistory.js","components/ebps-setup/TallaThapSetup.js"],"names":["GenericTableOneButton","props","_this","Object","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","tableRef","React","renderButton","row","htmlElement","ReactDOM","react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","title","buttonProps","onClick","handleButtonClick","size","className","class","aria-hidden","icon","actionColumns","text","cellsalign","align","createwidget","column","value","boundindex","initwidget","width","actionWidth","pinned","concat","columns","state","id","pageable","groupable","showfilterrow","_this$props","data","datafield","_this$props$needsActi","needsAction","_loggedInComponents_Grid_RootHistoryGrid__WEBPACK_IMPORTED_MODULE_6__","localdata","groups","rowsheight","onRowselect","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_7__","errors","loading","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_utils_data_genericSetupData__WEBPACK_IMPORTED_MODULE_5__","_utils_langUtils__WEBPACK_IMPORTED_MODULE_6__","_utils_dataUtils__WEBPACK_IMPORTED_MODULE_7__","_utils_optionUtils__WEBPACK_IMPORTED_MODULE_8__","applicationData","applicationTable","ApplicationDetails","_ref","appInfo","a","createElement","applicationInfo","Row","Column","Item","Header","applicantNo","Description","applicationId","applicantName","nibedakName","applicantMobileNo","translateEngToNepWithZero","applicantDate","getOptionText","constructionType","constructionTypeSelectOptions","GenericSetupTable","buttonrenderer","columnfield","defaulthtml","columnproperties","rowdata","generateButtonRenderer","cellsrenderer","bind","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_5__","TabPane","active","children","content","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","calculatedDefaultProps","Segment","attached","react_default","extends_default","lib","isNil","handledProps","defaultProps","as","propTypes","create","factories","Tab_TabPane","Tab_Tab","_Component","Tab","_getPrototypeOf2","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","apply","defineProperty_default","assertThisInitialized_default","e","index","invoke_default","objectSpread_default","activeIndex","trySetState","inherits_default","createClass_default","key","panes","renderActiveOnly","get_default","map_default","_ref2","pane","overrideProps","_this$props2","menu","menuPosition","tabular","Menu","autoGenerateKey","items","onItemClick","handleItemClick","_this$props3","grid","paneWidth","tabWidth","gridProps","objectWithoutProperties_default","position","Grid","GridColumn","renderItems","stretched","renderMenu","vertical","renderVertical","AutoControlledComponent","__webpack_exports__","tallaThapData","applicantAddress","applicationStatus","forwardTo","yourStatus","wardNo","kittaNo","year","assignDesigner","storeyHistory","saveText","confirmChange","historyNoData","cancelText","selectDesigner","selectFile","tallaThapColumns","dataField","TableWidths","APPLICATION_NO","tallaThapDatafield","name","type","tallaThapHistory","historyDatafield","TallaThapHistory","historyList","_useState","useState","_useState2","slicedToArray","fileView","setFileView","_useState3","_useState4","fileViewer","setFileViewer","_useState5","_useState6","historyChanged","setHistoryChanged","useJqxNepaliFilter","useEffect","fileViewButton","document","querySelectorAll","from","forEach","button","dataset","application","addEventListener","handleFileViewer","removeEventListener","talathapDocument","dist_default","visible","onClose","images","src","getDocUrl","zIndex","changeDesignerSchema","Yup","shape","designer","validateString","file","validateFile","modalData","initialValues","applicationNo","TallaThapSetupComponent","getAfterUpdateAdminData","postAdminDataByUrl","success","adminData","designerOption","setDesignerOption","setAppInfo","appList","setAppList","_useState7","_useState8","openModal","setOpenModal","_useState9","_useState10","sethistoryList","_useState11","_useState12","isChanging","setIsChanging","_useState13","dataChanged","_useFiscalYearAll","useFiscalYearAll","fiscalYear","fy","fyOption","showToast","api","completedPermitList","objName","applicationList","designers","filter","user","userType","UserType","DESIGNER","map","loginId","userName","email","handleConfirmation","handleChangeDesigner","handleClose","menuItem","render","Pane","Helmet_default","formik_esm","objectSpread2","onSubmit","values","actions","setSubmitting","err","console","log","handleSubmit","isSubmitting","setFieldValue","handleChange","Form","Group","widths","Field","EbpsForm","label","onChange","Select","needsZIndex","options","Button","isEmpty","Divider","validationSchema","FormData","selectedFile","append","_ref3","formErrors","validateForm","Fragment","AdminModalContainer","open","then","error","FileUploadInput","fileCatId","hasMultipleFiles","TallaThapHistory_TallaThapHistory","ErrorDisplay","message","secondary","pointing","TallaThapSetup","parentProps","AdminContainer","organizationUser","tallaThapList","updateApi","TallaThapSetup_TallaThapSetupComponent","assign"],"mappings":"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","file":"static/js/12.d59203a7.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\nimport { Button } from 'semantic-ui-react';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tbuttonProps: {\n\t\tclass?: string;\n\t\ttitle?: string;\n\t\ticon?: string;\n\t};\n\thandleButtonClick: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericTableOneButton extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\t}\n\n\trenderButton = (row: any, htmlElement: HTMLElement) => {\n\t\tReactDOM.render(\n\t\t\t<Button\n\t\t\t\ttitle={this.props.buttonProps.title}\n\t\t\t\tonClick={() => this.props.handleButtonClick(row)}\n\t\t\t\tsize=\"tiny\"\n\t\t\t\tclassName={this.props.buttonProps.class}\n\t\t\t>\n\t\t\t\t<i aria-hidden=\"true\" className={this.props.buttonProps.icon}></i>\n\t\t\t</Button>,\n\t\t\thtmlElement\n\t\t);\n\t};\n\n\tactionColumns = [\n\t\t{\n\t\t\ttext: 'Actions',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\tcreatewidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row.boundindex, htmlElement);\n\t\t\t},\n\t\t\tinitwidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row, htmlElement);\n\t\t\t},\n\t\t\twidth: this.props.actionWidth,\n\t\t\tpinned: 'true',\n\t\t},\n\t].concat(this.props.columns);\n\n\trender() {\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericTableOneButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, List, Grid } from 'semantic-ui-react';\nimport { applicationTable } from '../../../utils/data/genericSetupData';\nimport { translateEngToNepWithZero } from '../../../utils/langUtils';\nimport { getOptionText } from '../../../utils/dataUtils';\nimport { constructionTypeSelectOptions } from '../../../utils/optionUtils';\n\nconst applicationData = applicationTable;\n\nfunction ApplicationDetails({ appInfo }) {\n\treturn (\n\t\t<Segment>\n\t\t\t<Header>{applicationData.applicationInfo}</Header>\n\t\t\t<List className=\"app-info\">\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicationId}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.nibedakName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.nibedakName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantMobileNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantMobileNo}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{translateEngToNepWithZero(appInfo.applicantDate)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantDate}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{getOptionText(appInfo.constructionType, constructionTypeSelectOptions)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.constructionType}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</List>\n\t\t</Segment>\n\t);\n}\n\nApplicationDetails.propTypes = {\n\tappInfo: PropTypes.object.isRequired,\n};\n\nexport default ApplicationDetails;\n","import * as React from 'react';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tgenerateButtonRenderer: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericSetupTable extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\n\t\tthis.buttonrenderer = this.buttonrenderer.bind(this);\n\t}\n\n\tbuttonrenderer = (row: any, columnfield: string, value: any, defaulthtml: any, columnproperties: any, rowdata: any) => {\n\t\t//@ts-ignore\n\t\treturn this.props.generateButtonRenderer(row);\n\t};\n\n\tactionColumns = [\n\t\t{ text: 'Actions', cellsalign: 'center', align: 'center', cellsrenderer: this.buttonrenderer, width: this.props.actionWidth, pinned: 'true' },\n\t].concat(this.props.columns);\n\n\trender() {\n\t\t\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericSetupTable;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _get from \"lodash/get\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Grid from '../../collections/Grid/Grid';\nimport GridColumn from '../../collections/Grid/GridColumn';\nimport Menu from '../../collections/Menu/Menu';\nimport TabPane from './TabPane';\n/**\n * A Tab is a hidden section of content activated by a Menu.\n * @see Menu\n * @see Segment\n */\n\nvar Tab = /*#__PURE__*/function (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemClick\", function (e, _ref) {\n      var index = _ref.index;\n\n      _invoke(_this.props, 'onTabChange', e, _objectSpread({}, _this.props, {\n        activeIndex: index\n      }));\n\n      _this.trySetState({\n        activeIndex: index\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"getInitialAutoControlledState\",\n    value: function getInitialAutoControlledState() {\n      return {\n        activeIndex: 0\n      };\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this$props = this.props,\n          panes = _this$props.panes,\n          renderActiveOnly = _this$props.renderActiveOnly;\n      var activeIndex = this.state.activeIndex;\n      if (renderActiveOnly) return _invoke(_get(panes, \"[\".concat(activeIndex, \"]\")), 'render', this.props);\n      return _map(panes, function (_ref2, index) {\n        var pane = _ref2.pane;\n        return TabPane.create(pane, {\n          overrideProps: {\n            active: index === activeIndex\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this$props2 = this.props,\n          menu = _this$props2.menu,\n          panes = _this$props2.panes,\n          menuPosition = _this$props2.menuPosition;\n      var activeIndex = this.state.activeIndex;\n\n      if (menu.tabular === true && menuPosition === 'right') {\n        menu.tabular = 'right';\n      }\n\n      return Menu.create(menu, {\n        autoGenerateKey: false,\n        overrideProps: {\n          items: _map(panes, 'menuItem'),\n          onItemClick: this.handleItemClick,\n          activeIndex: activeIndex\n        }\n      });\n    }\n  }, {\n    key: \"renderVertical\",\n    value: function renderVertical(menu) {\n      var _this$props3 = this.props,\n          grid = _this$props3.grid,\n          menuPosition = _this$props3.menuPosition;\n\n      var paneWidth = grid.paneWidth,\n          tabWidth = grid.tabWidth,\n          gridProps = _objectWithoutProperties(grid, [\"paneWidth\", \"tabWidth\"]);\n\n      var position = menuPosition || menu.props.tabular === 'right' && 'right' || 'left';\n      return React.createElement(Grid, gridProps, position === 'left' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }), GridColumn.create({\n        width: paneWidth,\n        children: this.renderItems(),\n        stretched: true\n      }, {\n        autoGenerateKey: false\n      }), position === 'right' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var menu = this.renderMenu();\n      var rest = getUnhandledProps(Tab, this.props);\n      var ElementType = getElementType(Tab, this.props);\n\n      if (menu.props.vertical) {\n        return React.createElement(ElementType, rest, this.renderVertical(menu));\n      }\n\n      return React.createElement(ElementType, rest, menu.props.attached !== 'bottom' && menu, this.renderItems(), menu.props.attached === 'bottom' && menu);\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\n_defineProperty(Tab, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Tab, \"defaultProps\", {\n  grid: {\n    paneWidth: 12,\n    tabWidth: 4\n  },\n  menu: {\n    attached: true,\n    tabular: true\n  },\n  renderActiveOnly: true\n});\n\n_defineProperty(Tab, \"Pane\", TabPane);\n\n_defineProperty(Tab, \"handledProps\", [\"activeIndex\", \"as\", \"defaultActiveIndex\", \"grid\", \"menu\", \"menuPosition\", \"onTabChange\", \"panes\", \"renderActiveOnly\"]);\n\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** The initial activeIndex. */\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Index of the currently active tab. */\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Shorthand props for the Menu.\n   * tabular, if true, will derive final value from `menuPosition`, otherwise set 'left' or 'right' explicitly.\n   */\n  menu: PropTypes.object,\n\n  /** Align vertical menu */\n  menuPosition: PropTypes.oneOf(['left', 'right']),\n\n  /** Shorthand props for the Grid. */\n  grid: PropTypes.object,\n\n  /**\n   * Called on tab change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed new activeIndex.\n   * @param {object} data.activeIndex - The new proposed activeIndex.\n   */\n  onTabChange: PropTypes.func,\n\n  /**\n   * Array of objects describing each Menu.Item and Tab.Pane:\n   * { menuItem: 'Home', render: () => <Tab.Pane /> }\n   * or\n   * { menuItem: 'Home', pane: 'Welcome' }\n   */\n  panes: PropTypes.arrayOf(PropTypes.shape({\n    menuItem: customPropTypes.itemShorthand,\n    pane: customPropTypes.itemShorthand,\n    render: PropTypes.func\n  })),\n\n  /** A Tab can render only active pane. */\n  renderActiveOnly: PropTypes.bool\n} : {};\nexport default Tab;","import { TableWidths } from \"../../enums/ui\";\n\nexport const tallaThapData = {\n\tapplicationInfo: {\n\t\tapplicationId: 'शाखा दर्ता नं.',\n\t\tapplicantName: 'जग्गाधनीको नाम',\n\t\tapplicantAddress: 'जग्गाधनीको ठेगाना',\n\t\tnibedakName: 'निवेदकको नाम',\n\t\tapplicantMobileNo: 'सम्पर्क फोन',\n\t\tapplicantDate: 'दर्ता मिती',\n\t\tconstructionType: 'भवनको किसिम',\n\t\tapplicationStatus: 'पूर्ण अवस्था',\n\t\tforwardTo: 'तह स्थिति',\n\t\tyourStatus: 'अवस्था',\n\t\twardNo: 'वडा',\n\t\tkittaNo: 'कित्ता नं',\n\t\tyear: 'आर्थिक बर्ष',\n\t},\n\ttallaThapInfo: {\n\t\ttitle: 'तला थप स्वीकृति',\n\t\tassignDesigner: 'डिजाइनर छान्नुहोस्',\n\t\tstoreyHistory: 'तला थप History'\n\t},\n\tmodal: {\n\t\ttitle: 'डिजाइनर छान्नुहोस्',\n\t\tcontent: 'के तपाईं यस फाईलको लागि डिजाइनर छान्न चाहानुहुन्छ?',\n\t\tsaveText: 'हुन्छ',\n\t\tconfirmChange: 'डिजाइनर छान्नुहोस्',\n\t\thistoryNoData: 'कुनै पनि फाईल डिजाइनरलाई तोकिएको छैन',\n\t\tcancelText: 'रद्द गर्नुहोस्',\n\t\tselectDesigner: 'डिजाइनर छान्नुहोस् ',\n\t\tselectFile: 'फाईल छान्नुहोस्'\n\t},\n};\n\nexport const tallaThapColumns = [\n\t{\n\t\ttext: 'शाखा दर्ता नं.',\n\t\tdataField: 'applicantNo',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: TableWidths.APPLICATION_NO,\n\t\tpinned: 'true',\n\t},\n\t{\n\t\ttext: 'जग्गाधनीको नाम',\n\t\tdataField: 'applicantName',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\t// width: '200',\n\t\tpinned: 'true',\n\t},\n\n\t{\n\t\ttext: 'जग्गाधनीको ठेगाना',\n\t\tdataField: 'applicantAddress',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\t{\n\t\ttext: 'निवेदकको नाम',\n\t\tdataField: 'nibedakName',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\t// width: '200',\n\t},\n\t{\n\t\ttext: 'सम्पर्क फोन.',\n\t\tdataField: 'applicantMobileNo',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t},\n\t{\n\t\ttext: 'दर्ता मिति',\n\t\tdataField: 'applicantDate',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '100',\n\t},\n];\n\nexport const tallaThapDatafield = [\n\t{ name: 'applicantNo', type: 'string' },\n\t{ name: 'applicantName', type: 'string' },\n\t{ name: 'applicantAddress', type: 'string' },\n\t{ name: 'nibedakName', type: 'string' },\n\t{ name: 'yourStatus', type: 'string' },\n\t{ name: 'applicantDate', type: 'string' },\n\t{ name: 'applicantMobileNo', type: 'string' },\n];\n\nexport const tallaThapHistory = [\n\t{\n\t\ttext: 'शाखा दर्ता नं.',\n\t\tdataField: 'applicantNo',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '130',\n\t\tpinned: 'true',\n\t},\n\t{\n\t\ttext: 'जग्गाधनीको नाम',\n\t\tdataField: 'applicantName',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t\tpinned: 'true',\n\t},\n\n\t{\n\t\ttext: 'Assigned By',\n\t\tdataField: 'talaThapAssignBy',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\n\t{\n\t\ttext: 'Assigned On',\n\t\tdataField: 'talaThapAssignDate',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\t{\n\t\ttext: 'Assigned To',\n\t\tdataField: 'designer',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\t{\n\t\ttext: 'Status',\n\t\tdataField: 'talathapAssign',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t},\n];\n\nexport const historyDatafield = [\n\t{ name: 'applicantNo', type: 'string' },\n\t{ name: 'applicantName', type: 'string' },\n\t{ name: 'talaThapAssignBy', type: 'string' },\n\t{ name: 'talaThapAssignDate', type: 'string' },\n\t{ name: 'designer', type: 'string' },\n\t{ name: 'talathapAssign', type: 'string' },\n];\n","import React, { useState, useEffect } from 'react';\nimport Viewer from 'react-viewer';\nimport { getDocUrl } from '../../utils/config';\nimport { tallaThapHistory, historyDatafield, tallaThapData } from '../../utils/data/ebps-setup/tallaThapData';\nimport GenericSetupTable from './forms/GenericSetupTable';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\n\nexport const TallaThapHistory = ({ historyList }) => {\n\tconst [fileView, setFileView] = useState('');\n\tconst [fileViewer, setFileViewer] = useState(false);\n\tconst [historyChanged, setHistoryChanged] = useState(false);\n\n\tuseJqxNepaliFilter(historyChanged, [2])\n\n\tuseEffect(() => {\n\t\tconst fileViewButton = document.querySelectorAll('.view-file');\n\t\tif (fileViewButton.length > 0) {\n\t\t\tArray.from(fileViewButton).forEach(button => {\n\t\t\t\tconst row = button.dataset.row;\n\t\t\t\tconst application = historyList[row];\n\t\t\t\tbutton.addEventListener('click', () => handleFileViewer(application));\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst fileViewButton = document.querySelectorAll('.view-file');\n\t\t\tif (fileViewButton.length > 0) {\n\t\t\t\tArray.from(fileViewButton).forEach(button => {\n\t\t\t\t\tconst row = button.dataset.row;\n\t\t\t\t\tconst application = historyList[row];\n\t\t\t\t\tbutton.removeEventListener('click', () => handleFileViewer(application));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}, [historyList, historyChanged]);\n\n\tconst generateViewButtonRenderer = row => {\n\t\tsetHistoryChanged(!historyChanged);\n\t\treturn (\n\t\t\t'<button title=\"View File\" class=\"ui primary-table-single-btn tiny icon button view-file\" data-row=' +\n\t\t\trow +\n\t\t\t'><i aria-hidden=\"true\" class=\"eye icon\"></i></button>'\n\t\t);\n\t};\n\n\tconst handleFileViewer = row => {\n\t\tsetFileView(row.talathapDocument);\n\t\tsetFileViewer(true);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h4>{tallaThapData.tallaThapInfo.storeyHistory}</h4>\n\t\t\t<Viewer\n\t\t\t\tvisible={fileViewer}\n\t\t\t\tonClose={() => setFileViewer(false)}\n\t\t\t\timages={[{ src: `${getDocUrl()}${fileView}` }]}\n\t\t\t\tactiveIndex={0}\n\t\t\t\tzIndex={10000}\n\t\t\t/>\n\t\t\t<GenericSetupTable\n\t\t\t\tdata={historyList}\n\t\t\t\tcolumns={tallaThapHistory}\n\t\t\t\tdatafield={historyDatafield}\n\t\t\t\tgenerateButtonRenderer={generateViewButtonRenderer}\n\t\t\t\tactionWidth={100}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport api from '../../utils/api';\nimport AdminContainer from '../../containers/base/AdminContainer';\nimport { Form, Button, Header, Divider, Tab } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport ErrorDisplay from '../shared/ErrorDisplay';\nimport * as Yup from 'yup';\nimport { validateString, validateFile } from '../../utils/validationUtils';\nimport { SelectInput, SearchableSelectInput } from '../shared/Select';\nimport { UserType } from '../../utils/userTypeUtils';\nimport { isEmpty, showToast } from '../../utils/functionUtils';\nimport { AdminModalContainer } from './AdminModalContainer';\nimport { FileInputWithMultiplePreview } from '../shared/FileUploadInput';\nimport { constructionTypeSelectOptions } from '../../utils/optionUtils';\nimport { useFiscalYearAll } from '../../hooks/useFiscalYear';\nimport { tallaThapData, tallaThapColumns, tallaThapDatafield } from '../../utils/data/ebps-setup/tallaThapData';\nimport EbpsForm, { EbpsNormalForm } from '../shared/EbpsForm';\nimport { TallaThapHistory } from './TallaThapHistory';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\nimport ApplicationDetails from './shared/ApplicationDetails';\nimport Helmet from 'react-helmet';\nimport GenericTableOneButton from './forms/GenericTableOneButton';\n\n// const searchSchema = Yup.object().shape({\n// \tapplicationNo: validateNormalNumber,\n// });\n\nconst changeDesignerSchema = Yup.object().shape({\n\tdesigner: validateString,\n\tfile: validateFile,\n});\n\nconst applicationData = tallaThapData.applicationInfo;\nconst modalData = tallaThapData.modal;\n\nconst initialValues = {\n\tnibedakName: '',\n\tconstructionType: '',\n\tyear: '',\n\tapplicationNo: '',\n};\n\nexport const TallaThapSetupComponent = ({ getAfterUpdateAdminData, postAdminDataByUrl, errors, success, loading, adminData }) => {\n\tconst [designerOption, setDesignerOption] = useState();\n\tconst [appInfo, setAppInfo] = useState({});\n\tconst [appList, setAppList] = useState([]);\n\tconst [openModal, setOpenModal] = useState(false);\n\tconst [historyList, sethistoryList] = useState([]);\n\tconst [isChanging, setIsChanging] = useState(false);\n\tconst [dataChanged] = useState(false);\n\n\tconst { fy, fyOption } = useFiscalYearAll(adminData.fiscalYear, 'yearCode', true);\n\tuseJqxNepaliFilter(dataChanged);\n\n\tuseEffect(() => {\n\t\tif (success && success.success) {\n\t\t\tshowToast('Data saved successfully');\n\t\t\tsetOpenModal(false);\n\t\t\tsetIsChanging(false);\n\t\t\tsetAppInfo({});\n\t\t\tsetAppList([]);\n\t\t\tgetAfterUpdateAdminData([\n\t\t\t\t{\n\t\t\t\t\tapi: `${api.completedPermitList}?applicationNo=&nibedakName=&constructionType=&year=`,\n\t\t\t\t\tobjName: 'applicationList',\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t}, [success, getAfterUpdateAdminData]);\n\n\tuseEffect(() => {\n\t\tadminData.applicationList && setAppList(adminData.applicationList);\n\t}, [adminData.applicationList]);\n\n\tuseEffect(() => {\n\t\tadminData.historyList && sethistoryList(adminData.historyList);\n\t}, [adminData.historyList]);\n\n\tuseEffect(() => {\n\t\tadminData.designers &&\n\t\t\tsetDesignerOption(\n\t\t\t\tadminData.designers\n\t\t\t\t\t.filter((user) => user.userType && user.userType.id === UserType.DESIGNER)\n\t\t\t\t\t.map((row) => {\n\t\t\t\t\t\treturn { value: row.loginId, text: `${row.userName} - ${row.email}` };\n\t\t\t\t\t})\n\t\t\t);\n\t}, [adminData.designers]);\n\n\tconst handleButtonClick = (id) => {\n\t\tconst row = appList[id];\n\t\thandleConfirmation(row);\n\t};\n\n\tconst handleConfirmation = (row) => {\n\t\tsetAppInfo(row);\n\t\tsetOpenModal(true);\n\t};\n\n\tconst handleChangeDesigner = () => {\n\t\tsetIsChanging(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAppInfo({});\n\t\tsetIsChanging(false);\n\t\tsetOpenModal(false);\n\t};\n\n\tconst panes = [\n\t\t{\n\t\t\tmenuItem: 'डिजाइनर छान्नुहोस्',\n\t\t\trender: () => (\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\n\t\t\t\t\t<Helmet title={tallaThapData.tallaThapInfo.title} />\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tkey=\"get-app-info\"\n\t\t\t\t\t\tinitialValues={{ ...initialValues, year: fy }}\n\t\t\t\t\t\t// validationSchema={searchSchema}\n\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\tactions.setSubmitting(true);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tsetAppList([]);\n\t\t\t\t\t\t\t\tgetAfterUpdateAdminData([\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tapi: `${api.completedPermitList}?applicationNo=${values.applicationNo}&nibedakName=${values.nibedakName}&constructionType=${values.constructionType}&year=${values.year}`,\n\t\t\t\t\t\t\t\t\t\tobjName: 'applicationList',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ handleSubmit, errors, isSubmitting, values, setFieldValue, handleChange }) => (\n\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"4\">\n\t\t\t\t\t\t\t\t\t{/* <Form.Field error={!!errors.applicationNo}>\n\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"applicationNo\" placeholder=\"Enter Application Number\" />\n\t\t\t\t\t\t\t\t{errors.applicationNo && (\n\t\t\t\t\t\t\t\t\t<Label pointing prompt size=\"large\">\n\t\t\t\t\t\t\t\t\t\t{errors.applicationNo}\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Form.Field> */}\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsNormalForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"applicationNo\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.applicationId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.applicationNo}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.applicationNo}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"nibedakName\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.nibedakName}\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.nibedakName}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.nibedakName}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\t\t\tneedsZIndex={true}\n\t\t\t\t\t\t\t\t\t\t\tname=\"constructionType\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.constructionType}\n\t\t\t\t\t\t\t\t\t\t\toptions={constructionTypeSelectOptions}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectInput needsZIndex={true} name=\"year\" label={applicationData.year} options={fyOption} />\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Button className=\"primary-btn\" icon=\"search\" content=\"Search Application\" onClick={handleSubmit} />\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t\t<h4>Search Results</h4>\n\t\t\t\t\t<GenericTableOneButton\n\t\t\t\t\t\tdata={appList}\n\t\t\t\t\t\tcolumns={tallaThapColumns}\n\t\t\t\t\t\tdatafield={tallaThapDatafield}\n\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\tclass: 'primary-table-single-btn icon',\n\t\t\t\t\t\t\ticon: 'add user icon',\n\t\t\t\t\t\t\ttitle: 'Assign Designer',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thandleButtonClick={handleButtonClick}\n\t\t\t\t\t\tactionWidth={100}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t{!isEmpty(appInfo) && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\tkey=\"assign-designer\"\n\t\t\t\t\t\t\t\tvalidationSchema={changeDesignerSchema}\n\t\t\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\t\t\tactions.setSubmitting(true);\n\t\t\t\t\t\t\t\t\tconst data = new FormData();\n\t\t\t\t\t\t\t\t\tconst selectedFile = values.file;\n\n\t\t\t\t\t\t\t\t\tif (selectedFile) {\n\t\t\t\t\t\t\t\t\t\tselectedFile.forEach((file) => data.append('file', file));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tdata.append('applicationNo', appInfo.applicantNo);\n\t\t\t\t\t\t\t\t\tdata.append('designer', values.designer);\n\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tpostAdminDataByUrl(`${api.completedPermitList}`, data);\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({ handleSubmit, isSubmitting, errors: formErrors, validateForm }) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{/* // <Form> */}\n\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\tkey={'open-confirmation'}\n\t\t\t\t\t\t\t\t\t\t\topen={openModal}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit={handleChangeDesigner}\n\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\n\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.saveText}\n\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{modalData.content}\n\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\n\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\topen={isChanging}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tvalidateForm().then((errors) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (isEmpty(errors)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\n\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.confirmChange}\n\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field error={!!formErrors.designer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>{modalData.selectDesigner}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SearchableSelectInput name=\"designer\" options={designerOption} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field error={!!formErrors.file}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>{modalData.selectFile}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileInputWithMultiplePreview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileCatId={'assign-designer'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thasMultipleFiles={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t<ApplicationDetails appInfo={appInfo} />\n\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\t\t\t\t\t\t\t\t\t\t{/* // </Form> */}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Tab.Pane>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tmenuItem: 'तला थप History',\n\t\t\trender: () => (\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\n\t\t\t\t\t<Helmet title={tallaThapData.tallaThapInfo.storeyHistory} />\n\t\t\t\t\t<TallaThapHistory historyList={historyList} />\n\t\t\t\t</Tab.Pane>\n\t\t\t),\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"setup-main\">\n\t\t\t{errors && <ErrorDisplay message={errors.message} />}\n\t\t\t<Header>{tallaThapData.tallaThapInfo.title}</Header>\n\t\t\t<Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n\t\t</div>\n\t);\n};\n\nexport const TallaThapSetup = (parentProps) => (\n\t<AdminContainer\n\t\tapi={[\n\t\t\t{ api: api.organizationUser, objName: 'designers' },\n\t\t\t{ api: api.fiscalYear, objName: 'fiscalYear' },\n\t\t\t{ api: `${api.tallaThapList}?status=`, objName: 'historyList' },\n\t\t]}\n\t\tupdateApi={[{ api: `${api.tallaThapList}?status=`, objName: 'historyList' }]}\n\t\trender={(props) => <TallaThapSetupComponent {...props} parentProps={parentProps} />}\n\t/>\n);\n\nexport { TallaThapSetup as default };\n"],"sourceRoot":""}