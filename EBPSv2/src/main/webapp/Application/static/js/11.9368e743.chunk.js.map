{"version":3,"sources":["components/ebps-setup/forms/GenericTableOneButton.tsx","components/ebps-setup/shared/ApplicationDetails.js","components/ebps-setup/forms/GenericSetupTable.tsx","../node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js","../node_modules/semantic-ui-react/dist/es/modules/Tab/Tab.js","components/ebps-setup/NamsariHistory.js","components/ebps-setup/NamsariSetup.js"],"names":["GenericTableOneButton","props","_this","Object","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","tableRef","React","renderButton","row","htmlElement","ReactDOM","react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","title","buttonProps","onClick","handleButtonClick","size","className","class","aria-hidden","icon","actionColumns","text","cellsalign","align","createwidget","column","value","boundindex","initwidget","width","actionWidth","pinned","concat","columns","state","id","pageable","groupable","showfilterrow","_this$props","data","datafield","_this$props$needsActi","needsAction","_loggedInComponents_Grid_RootHistoryGrid__WEBPACK_IMPORTED_MODULE_6__","localdata","groups","rowsheight","onRowselect","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_7__","errors","loading","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_utils_data_genericSetupData__WEBPACK_IMPORTED_MODULE_5__","_utils_langUtils__WEBPACK_IMPORTED_MODULE_6__","_utils_dataUtils__WEBPACK_IMPORTED_MODULE_7__","_utils_optionUtils__WEBPACK_IMPORTED_MODULE_8__","applicationData","applicationTable","ApplicationDetails","_ref","appInfo","a","createElement","applicationInfo","Row","Column","Item","Header","applicantNo","Description","applicationId","applicantName","nibedakName","applicantMobileNo","translateEngToNepWithZero","applicantDate","getOptionText","constructionType","constructionTypeSelectOptions","GenericSetupTable","buttonrenderer","columnfield","defaulthtml","columnproperties","rowdata","generateButtonRenderer","cellsrenderer","bind","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_5__","TabPane","active","children","content","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","calculatedDefaultProps","Segment","attached","react_default","extends_default","lib","isNil","handledProps","defaultProps","as","propTypes","create","factories","Tab_TabPane","Tab_Tab","_Component","Tab","_getPrototypeOf2","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","apply","defineProperty_default","assertThisInitialized_default","e","index","invoke_default","objectSpread_default","activeIndex","trySetState","inherits_default","createClass_default","key","panes","renderActiveOnly","get_default","map_default","_ref2","pane","overrideProps","_this$props2","menu","menuPosition","tabular","Menu","autoGenerateKey","items","onItemClick","handleItemClick","_this$props3","grid","paneWidth","tabWidth","gridProps","objectWithoutProperties_default","position","Grid","GridColumn","renderItems","stretched","renderMenu","vertical","renderVertical","AutoControlledComponent","__webpack_exports__","NamsariHistory","historyList","_useState","useState","_useState2","slicedToArray","historyChanged","setHistoryChanged","useJqxNepaliFilter","namsariHistory","historyDatafield","modalData","namsariData","modal","initialValues","year","kittaNo","wardNo","applicationNo","NamsariSetupComponent","getAfterUpdateAdminData","postAdminDataByUrl","success","adminData","setAppInfo","_useState3","_useState4","appList","setAppList","_useState5","_useState6","openModal","setOpenModal","_useState7","_useState8","sethistoryList","_useState9","_useState10","isChanging","setIsChanging","_useState11","dataChanged","_useFiscalYearAll","useFiscalYearAll","fiscalYear","fy","fyOption","useEffect","showToast","applicationList","nameTransferHistory","map","el","objectSpread2","getDataConstructionType","handleConfirmation","handleChangeDesigner","handleClose","menuItem","tab","setupHeading","render","Pane","Helmet_default","heading","formik_esm","onSubmit","values","actions","setSubmitting","api","namsariSetup","objName","err","console","log","handleSubmit","isSubmitting","setFieldValue","handleChange","Form","Group","widths","Field","EbpsForm","name","label","onChange","Select","needsZIndex","options","consTypeWithDefaultSelectOptions","Button","type","searchData","searchApp","searchResults","namsariColumns","namsariDatafield","isEmpty","Divider","time","_ref3","validateForm","globalError","message","namsariErrors","namsariNotComplete","AdminModalContainer","open","saveText","cancelText","then","confirmChange","historyHeading","NamsariHistory_NamsariHistory","ErrorDisplay","secondary","pointing","NamsariSetup","parentProps","AdminContainer","updateApi","NamsariSetup_NamsariSetupComponent","assign"],"mappings":"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","file":"static/js/11.9368e743.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\r\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\r\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\r\nimport FallbackComponent from '../../shared/FallbackComponent';\r\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\ninterface IState {\r\n\tid: string;\r\n\tpageable: boolean;\r\n\tgroupable: boolean;\r\n\tshowfilterrow: boolean;\r\n}\r\n\r\ninterface IComponentProps {\r\n\tdata: [];\r\n\tcolumns: [];\r\n\tdatafield: [];\r\n\tbuttonProps: {\r\n\t\tclass?: string;\r\n\t\ttitle?: string;\r\n\t\ticon?: string;\r\n\t};\r\n\thandleButtonClick: (row: any) => string;\r\n\tactionWidth: number;\r\n\tneedsAction?: boolean;\r\n}\r\n\r\nclass GenericTableOneButton extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\r\n\tprivate tableRef = React.createRef<JqxGrid>();\r\n\r\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\tpageable: true,\r\n\t\t\tgroupable: true,\r\n\t\t\tshowfilterrow: true,\r\n\t\t};\r\n\t}\r\n\r\n\trenderButton = (row: any, htmlElement: HTMLElement) => {\r\n\t\tReactDOM.render(\r\n\t\t\t<Button\r\n\t\t\t\ttitle={this.props.buttonProps.title}\r\n\t\t\t\tonClick={() => this.props.handleButtonClick(row)}\r\n\t\t\t\tsize=\"tiny\"\r\n\t\t\t\tclassName={this.props.buttonProps.class}\r\n\t\t\t>\r\n\t\t\t\t<i aria-hidden=\"true\" className={this.props.buttonProps.icon}></i>\r\n\t\t\t</Button>,\r\n\t\t\thtmlElement\r\n\t\t);\r\n\t};\r\n\r\n\tactionColumns = [\r\n\t\t{\r\n\t\t\ttext: 'Actions',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\tcreatewidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\r\n\t\t\t\tthis.renderButton(row.boundindex, htmlElement);\r\n\t\t\t},\r\n\t\t\tinitwidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\r\n\t\t\t\tthis.renderButton(row, htmlElement);\r\n\t\t\t},\r\n\t\t\twidth: this.props.actionWidth,\r\n\t\t\tpinned: 'true',\r\n\t\t},\r\n\t].concat(this.props.columns);\r\n\r\n\trender() {\r\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\r\n\r\n\t\tif (data) {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\r\n\t\t\t\t\t\t{/* \r\n              \t\t\t\t// @ts-ignore */}\r\n\t\t\t\t\t\t<RootHistoryGrid\r\n\t\t\t\t\t\t\t// Grid={this.tableRef}\r\n\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\tlocaldata={data}\r\n\t\t\t\t\t\t\tdatafield={datafield}\r\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\r\n\t\t\t\t\t\t\tgroups={false}\r\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\r\n\t\t\t\t\t\t\trowsheight={50}\r\n\t\t\t\t\t\t\tpageable={this.state.pageable}\r\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\r\n\t\t\t\t\t\t\tonRowselect={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default GenericTableOneButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Header, List, Grid } from 'semantic-ui-react';\r\nimport { applicationTable } from '../../../utils/data/genericSetupData';\r\nimport { translateEngToNepWithZero } from '../../../utils/langUtils';\r\nimport { getOptionText } from '../../../utils/dataUtils';\r\nimport { constructionTypeSelectOptions } from '../../../utils/optionUtils';\r\n\r\nconst applicationData = applicationTable;\r\n\r\nfunction ApplicationDetails({ appInfo }) {\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Header>{applicationData.applicationInfo}</Header>\r\n\t\t\t<List className=\"app-info\">\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Grid.Row columns=\"3\">\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantNo}</List.Header>\r\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicationId}</List.Description>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantName}</List.Header>\r\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantName}</List.Description>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.nibedakName}</List.Header>\r\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.nibedakName}</List.Description>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t<Grid.Row columns=\"3\">\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantMobileNo}</List.Header>\r\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantMobileNo}</List.Description>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t<List.Header>{translateEngToNepWithZero(appInfo.applicantDate)}</List.Header>\r\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantDate}</List.Description>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t\t\t<List.Header>{getOptionText(appInfo.constructionType, constructionTypeSelectOptions)}</List.Header>\r\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.constructionType}</List.Description>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid>\r\n\t\t\t</List>\r\n\t\t</Segment>\r\n\t);\r\n}\r\n\r\nApplicationDetails.propTypes = {\r\n\tappInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ApplicationDetails;\r\n","import * as React from 'react';\r\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\r\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\r\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\r\nimport FallbackComponent from '../../shared/FallbackComponent';\r\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\r\n\r\ninterface IState {\r\n\tid: string;\r\n\tpageable: boolean;\r\n\tgroupable: boolean;\r\n\tshowfilterrow: boolean;\r\n}\r\n\r\ninterface IComponentProps {\r\n\tdata: [];\r\n\tcolumns: [];\r\n\tdatafield: [];\r\n\tgenerateButtonRenderer: (row: any) => string;\r\n\tactionWidth: number;\r\n\tneedsAction?: boolean;\r\n}\r\n\r\nclass GenericSetupTable extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\r\n\tprivate tableRef = React.createRef<JqxGrid>();\r\n\r\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\tpageable: true,\r\n\t\t\tgroupable: true,\r\n\t\t\tshowfilterrow: true,\r\n\t\t};\r\n\r\n\t\tthis.buttonrenderer = this.buttonrenderer.bind(this);\r\n\t}\r\n\r\n\tbuttonrenderer = (row: any, columnfield: string, value: any, defaulthtml: any, columnproperties: any, rowdata: any) => {\r\n\t\t//@ts-ignore\r\n\t\treturn this.props.generateButtonRenderer(row);\r\n\t};\r\n\r\n\tactionColumns = [\r\n\t\t{ text: 'Actions', cellsalign: 'center', align: 'center', cellsrenderer: this.buttonrenderer, width: this.props.actionWidth, pinned: 'true' },\r\n\t].concat(this.props.columns);\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\r\n\r\n\t\tif (data) {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\r\n\t\t\t\t\t\t{/* \r\n              \t\t\t\t// @ts-ignore */}\r\n\t\t\t\t\t\t<RootHistoryGrid\r\n\t\t\t\t\t\t\t// Grid={this.tableRef}\r\n\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\tlocaldata={data}\r\n\t\t\t\t\t\t\tdatafield={datafield}\r\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\r\n\t\t\t\t\t\t\tgroups={false}\r\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\r\n\t\t\t\t\t\t\trowsheight={50}\r\n\t\t\t\t\t\t\tpageable={this.state.pageable}\r\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\r\n\t\t\t\t\t\t\tonRowselect={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default GenericSetupTable;\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _get from \"lodash/get\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Grid from '../../collections/Grid/Grid';\nimport GridColumn from '../../collections/Grid/GridColumn';\nimport Menu from '../../collections/Menu/Menu';\nimport TabPane from './TabPane';\n/**\n * A Tab is a hidden section of content activated by a Menu.\n * @see Menu\n * @see Segment\n */\n\nvar Tab = /*#__PURE__*/function (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemClick\", function (e, _ref) {\n      var index = _ref.index;\n\n      _invoke(_this.props, 'onTabChange', e, _objectSpread({}, _this.props, {\n        activeIndex: index\n      }));\n\n      _this.trySetState({\n        activeIndex: index\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"getInitialAutoControlledState\",\n    value: function getInitialAutoControlledState() {\n      return {\n        activeIndex: 0\n      };\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this$props = this.props,\n          panes = _this$props.panes,\n          renderActiveOnly = _this$props.renderActiveOnly;\n      var activeIndex = this.state.activeIndex;\n      if (renderActiveOnly) return _invoke(_get(panes, \"[\".concat(activeIndex, \"]\")), 'render', this.props);\n      return _map(panes, function (_ref2, index) {\n        var pane = _ref2.pane;\n        return TabPane.create(pane, {\n          overrideProps: {\n            active: index === activeIndex\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this$props2 = this.props,\n          menu = _this$props2.menu,\n          panes = _this$props2.panes,\n          menuPosition = _this$props2.menuPosition;\n      var activeIndex = this.state.activeIndex;\n\n      if (menu.tabular === true && menuPosition === 'right') {\n        menu.tabular = 'right';\n      }\n\n      return Menu.create(menu, {\n        autoGenerateKey: false,\n        overrideProps: {\n          items: _map(panes, 'menuItem'),\n          onItemClick: this.handleItemClick,\n          activeIndex: activeIndex\n        }\n      });\n    }\n  }, {\n    key: \"renderVertical\",\n    value: function renderVertical(menu) {\n      var _this$props3 = this.props,\n          grid = _this$props3.grid,\n          menuPosition = _this$props3.menuPosition;\n\n      var paneWidth = grid.paneWidth,\n          tabWidth = grid.tabWidth,\n          gridProps = _objectWithoutProperties(grid, [\"paneWidth\", \"tabWidth\"]);\n\n      var position = menuPosition || menu.props.tabular === 'right' && 'right' || 'left';\n      return React.createElement(Grid, gridProps, position === 'left' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }), GridColumn.create({\n        width: paneWidth,\n        children: this.renderItems(),\n        stretched: true\n      }, {\n        autoGenerateKey: false\n      }), position === 'right' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var menu = this.renderMenu();\n      var rest = getUnhandledProps(Tab, this.props);\n      var ElementType = getElementType(Tab, this.props);\n\n      if (menu.props.vertical) {\n        return React.createElement(ElementType, rest, this.renderVertical(menu));\n      }\n\n      return React.createElement(ElementType, rest, menu.props.attached !== 'bottom' && menu, this.renderItems(), menu.props.attached === 'bottom' && menu);\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\n_defineProperty(Tab, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Tab, \"defaultProps\", {\n  grid: {\n    paneWidth: 12,\n    tabWidth: 4\n  },\n  menu: {\n    attached: true,\n    tabular: true\n  },\n  renderActiveOnly: true\n});\n\n_defineProperty(Tab, \"Pane\", TabPane);\n\n_defineProperty(Tab, \"handledProps\", [\"activeIndex\", \"as\", \"defaultActiveIndex\", \"grid\", \"menu\", \"menuPosition\", \"onTabChange\", \"panes\", \"renderActiveOnly\"]);\n\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** The initial activeIndex. */\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Index of the currently active tab. */\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Shorthand props for the Menu.\n   * tabular, if true, will derive final value from `menuPosition`, otherwise set 'left' or 'right' explicitly.\n   */\n  menu: PropTypes.object,\n\n  /** Align vertical menu */\n  menuPosition: PropTypes.oneOf(['left', 'right']),\n\n  /** Shorthand props for the Grid. */\n  grid: PropTypes.object,\n\n  /**\n   * Called on tab change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed new activeIndex.\n   * @param {object} data.activeIndex - The new proposed activeIndex.\n   */\n  onTabChange: PropTypes.func,\n\n  /**\n   * Array of objects describing each Menu.Item and Tab.Pane:\n   * { menuItem: 'Home', render: () => <Tab.Pane /> }\n   * or\n   * { menuItem: 'Home', pane: 'Welcome' }\n   */\n  panes: PropTypes.arrayOf(PropTypes.shape({\n    menuItem: customPropTypes.itemShorthand,\n    pane: customPropTypes.itemShorthand,\n    render: PropTypes.func\n  })),\n\n  /** A Tab can render only active pane. */\n  renderActiveOnly: PropTypes.bool\n} : {};\nexport default Tab;","import React, { useState } from 'react';\r\nimport GenericSetupTable from './forms/GenericSetupTable';\r\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\r\nimport { namsariHistory, historyDatafield } from '../../utils/data/ebps-setup/namsariSetupData';\r\n\r\nexport const NamsariHistory = ({ historyList }) => {\r\n\tconst [historyChanged, setHistoryChanged] = useState(false);\r\n\r\n\tuseJqxNepaliFilter(historyChanged, [2, 4], []);\r\n\r\n\tconst generateViewButtonRenderer = row => {\r\n\t\tsetHistoryChanged(!historyChanged);\r\n\t\treturn '<p></p>';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<GenericSetupTable\r\n\t\t\t\tdata={historyList}\r\n\t\t\t\tcolumns={namsariHistory}\r\n\t\t\t\tdatafield={historyDatafield}\r\n\t\t\t\tgenerateButtonRenderer={generateViewButtonRenderer}\r\n\t\t\t\tactionWidth={0}\r\n\t\t\t\tneedsAction={false}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport AdminContainer from '../../containers/base/AdminContainer';\r\nimport api from '../../utils/api';\r\nimport { useFiscalYearAll } from '../../hooks/useFiscalYear';\r\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\r\nimport { showToast, isEmpty } from '../../utils/functionUtils';\r\nimport { Tab, Button, Divider, Header, Form } from 'semantic-ui-react';\r\nimport { Formik } from 'formik';\r\nimport { applicationTable, searchData } from '../../utils/data/genericSetupData';\r\nimport { namsariData, namsariColumns, namsariDatafield } from '../../utils/data/ebps-setup/namsariSetupData';\r\nimport * as Yup from 'yup';\r\nimport EbpsForm, { EbpsNormalForm } from '../shared/EbpsForm';\r\nimport { SelectInput } from '../shared/Select';\r\nimport { consTypeWithDefaultSelectOptions } from '../../utils/optionUtils';\r\nimport { AdminModalContainer } from './AdminModalContainer';\r\nimport ErrorDisplay from '../shared/ErrorDisplay';\r\nimport ApplicationDetails from './shared/ApplicationDetails';\r\nimport { NamsariHistory } from './NamsariHistory';\r\nimport { getDataConstructionType } from '../../utils/enums/constructionType';\r\nimport Helmet from 'react-helmet';\r\nimport GenericTableOneButton from './forms/GenericTableOneButton';\r\n\r\n// const changeDesignerSchema = Yup.object().shape({\r\n// \t// designer: validateString,\r\n// \t// file: validateFile,\r\n// });\r\n\r\nconst applicationData = applicationTable;\r\nconst modalData = namsariData.modal;\r\n\r\nconst initialValues = {\r\n\tnibedakName: '',\r\n\tconstructionType: '',\r\n\tyear: '',\r\n\tkittaNo: '',\r\n\twardNo: '',\r\n\tapplicationNo: '',\r\n};\r\n\r\nconst NamsariSetupComponent = ({ getAfterUpdateAdminData, postAdminDataByUrl, errors, success, loading, adminData }) => {\r\n\tconst [appInfo, setAppInfo] = useState({});\r\n\tconst [appList, setAppList] = useState([]);\r\n\tconst [openModal, setOpenModal] = useState(false);\r\n\tconst [historyList, sethistoryList] = useState([]);\r\n\tconst [isChanging, setIsChanging] = useState(false);\r\n\tconst [dataChanged] = useState(false);\r\n\r\n\tconst { fy, fyOption } = useFiscalYearAll(adminData.fiscalYear, 'yearCode', true);\r\n\tuseJqxNepaliFilter(dataChanged, [2, 3, 4, 5]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (success && success.success) {\r\n\t\t\tshowToast('Data saved successfully');\r\n\t\t\tsetOpenModal(false);\r\n\t\t\tsetIsChanging(false);\r\n\t\t\tsetAppInfo({});\r\n\t\t}\r\n\t}, [success]);\r\n\r\n\tuseEffect(() => {\r\n\t\tadminData.applicationList && setAppList(adminData.applicationList);\r\n\t}, [adminData.applicationList]);\r\n\r\n\tuseEffect(() => {\r\n\t\tadminData.historyList &&\r\n\t\t\tsethistoryList(\r\n\t\t\t\tadminData.historyList.nameTransferHistory.map((el) => {\r\n\t\t\t\t\treturn { ...el, constructionType: getDataConstructionType(el.constructionType) };\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}, [adminData.historyList]);\r\n\r\n\tconst handleButtonClick = (id) => {\r\n\t\tconst row = appList[id];\r\n\t\thandleConfirmation(row);\r\n\t};\r\n\r\n\tconst handleConfirmation = (row) => {\r\n\t\tsetAppInfo(row);\r\n\t\tsetOpenModal(true);\r\n\t};\r\n\r\n\tconst handleChangeDesigner = () => {\r\n\t\tsetOpenModal(false);\r\n\t\tsetIsChanging(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetAppInfo({});\r\n\t\tsetIsChanging(false);\r\n\t\tsetOpenModal(false);\r\n\t};\r\n\r\n\tconst panes = [\r\n\t\t{\r\n\t\t\tmenuItem: namsariData.tab.setupHeading,\r\n\t\t\trender: () => (\r\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\r\n\t\t\t\t\t<Helmet>\r\n\t\t\t\t\t\t<title>{namsariData.heading}</title>\r\n\t\t\t\t\t</Helmet>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tkey=\"get-app-info\"\r\n\t\t\t\t\t\tinitialValues={{ ...initialValues, year: fy }}\r\n\t\t\t\t\t\t// validationSchema={searchSchema}\r\n\t\t\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t\t\tactions.setSubmitting(true);\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tsetAppList([]);\r\n\t\t\t\t\t\t\t\tgetAfterUpdateAdminData([\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tapi: `${api.namsariSetup}?applocationNo=${values.applicationNo}&nibedakName=${values.nibedakName}&constructionType=${values.constructionType}&year=${values.year}&kittaNo=${values.kittaNo}&wardNo=${values.wardNo}`,\r\n\t\t\t\t\t\t\t\t\t\tobjName: 'applicationList',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\r\n\t\t\t\t\t\t\t\tconsole.log('err', err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ handleSubmit, errors, isSubmitting, values, setFieldValue, handleChange }) => (\r\n\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\r\n\t\t\t\t\t\t\t\t<Form.Group widths=\"4\">\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<EbpsNormalForm\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"applicationNo\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.applicationId}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.applicationNo}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.applicationNo}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"nibedakName\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.nibedakName}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.nibedakName}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.nibedakName}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<SelectInput\r\n\t\t\t\t\t\t\t\t\t\t\tneedsZIndex={true}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"constructionType\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.constructionType}\r\n\t\t\t\t\t\t\t\t\t\t\toptions={consTypeWithDefaultSelectOptions}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<SelectInput needsZIndex={true} name=\"year\" label={applicationData.year} options={fyOption} />\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group widths=\"4\">\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"kittaNo\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.kittaNo}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.kittaNo}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.kittaNo}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"wardNo\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.wardNo}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.wardNo}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.wardNo}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\r\n\t\t\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"primary-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"search\"\r\n\t\t\t\t\t\t\t\t\t\t\tcontent={searchData.searchApp}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t\t<h4>{searchData.searchResults}</h4>\r\n\t\t\t\t\t<GenericTableOneButton\r\n\t\t\t\t\t\tdata={appList}\r\n\t\t\t\t\t\tcolumns={namsariColumns}\r\n\t\t\t\t\t\tdatafield={namsariDatafield}\r\n\t\t\t\t\t\tbuttonProps={{\r\n\t\t\t\t\t\t\tclass: 'primary-table-single-btn icon',\r\n\t\t\t\t\t\t\ticon: 'exchange icon',\r\n\t\t\t\t\t\t\ttitle: 'Send for Namsari',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\thandleButtonClick={handleButtonClick}\r\n\t\t\t\t\t\tactionWidth={80}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{!isEmpty(appInfo) && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\tkey=\"namsari\"\r\n\t\t\t\t\t\t\t\t// validationSchema={changeDesignerSchema}\r\n\t\t\t\t\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t\t\t\t\tactions.setSubmitting(true);\r\n\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\tpostAdminDataByUrl(`${api.namsariSetup}/${appInfo.applicantNo}/${appInfo.time}`);\r\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\r\n\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('err', err);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{({ handleSubmit, isSubmitting, errors: formErrors, validateForm }) => {\r\n\t\t\t\t\t\t\t\t\tconst globalError =\r\n\t\t\t\t\t\t\t\t\t\terrors && errors.message === 'PNC' ? { message: namsariData.namsariErrors.namsariNotComplete } : errors;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={'open-confirmation'}\r\n\t\t\t\t\t\t\t\t\t\t\t\topen={openModal}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors={globalError}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={handleChangeDesigner}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.saveText}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{modalData.content}\r\n\t\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\r\n\t\t\t\t\t\t\t\t\t\t\t\topen={isChanging}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors={globalError}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateForm().then((errors) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isEmpty(errors)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.confirmChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ApplicationDetails appInfo={appInfo} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Tab.Pane>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tmenuItem: namsariData.tab.historyHeading,\r\n\t\t\trender: () => (\r\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\r\n\t\t\t\t\t<Helmet>\r\n\t\t\t\t\t\t<title>{namsariData.tab.historyHeading}</title>\r\n\t\t\t\t\t</Helmet>\r\n\t\t\t\t\t<NamsariHistory historyList={historyList} />\r\n\t\t\t\t</Tab.Pane>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"setup-main\">\r\n\t\t\t{errors && <ErrorDisplay message={errors.message} />}\r\n\t\t\t<Header>{namsariData.heading}</Header>\r\n\t\t\t<Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport const NamsariSetup = (parentProps) => (\r\n\t<AdminContainer\r\n\t\tapi={[\r\n\t\t\t{ api: api.fiscalYear, objName: 'fiscalYear' },\r\n\t\t\t{ api: api.namsariHistory, objName: 'historyList' },\r\n\t\t]}\r\n\t\tupdateApi={[{ api: api.namsariHistory, objName: 'historyList' }]}\r\n\t\trender={(props) => <NamsariSetupComponent {...props} parentProps={parentProps} />}\r\n\t/>\r\n);\r\n\r\nexport { NamsariSetup as default };\r\n"],"sourceRoot":""}