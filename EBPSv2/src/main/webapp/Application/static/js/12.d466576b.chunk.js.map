{"version":3,"sources":["components/ebps-setup/forms/GenericTableOneButton.tsx","components/ebps-setup/shared/ApplicationDetails.js","components/ebps-setup/forms/GenericSetupTable.tsx","components/ebps-setup/NamsariHistory.js","components/ebps-setup/NamsariSetup.js"],"names":["GenericTableOneButton","props","_this","Object","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","tableRef","React","renderButton","row","htmlElement","ReactDOM","react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","title","buttonProps","onClick","handleButtonClick","size","className","class","aria-hidden","icon","actionColumns","text","cellsalign","align","createwidget","column","value","boundindex","initwidget","width","actionWidth","pinned","concat","columns","state","id","pageable","groupable","showfilterrow","_this$props","data","datafield","_this$props$needsActi","needsAction","_loggedInComponents_Grid_RootHistoryGrid__WEBPACK_IMPORTED_MODULE_6__","localdata","groups","rowsheight","onRowselect","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_7__","errors","loading","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_utils_data_genericSetupData__WEBPACK_IMPORTED_MODULE_5__","_utils_langUtils__WEBPACK_IMPORTED_MODULE_6__","_utils_dataUtils__WEBPACK_IMPORTED_MODULE_7__","_utils_optionUtils__WEBPACK_IMPORTED_MODULE_8__","applicationData","applicationTable","ApplicationDetails","_ref","appInfo","a","createElement","applicationInfo","Row","Column","Item","Header","applicantNo","Description","applicationId","applicantName","nibedakName","applicantMobileNo","translateEngToNepWithZero","applicantDate","getOptionText","constructionType","constructionTypeSelectOptions","GenericSetupTable","buttonrenderer","columnfield","defaulthtml","columnproperties","rowdata","generateButtonRenderer","cellsrenderer","bind","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_5__","NamsariHistory","historyList","_useState","useState","_useState2","slicedToArray","historyChanged","setHistoryChanged","useJqxNepaliFilter","react_default","namsariHistory","historyDatafield","modalData","namsariData","modal","initialValues","year","kittaNo","wardNo","applicationNo","NamsariSetupComponent","getAfterUpdateAdminData","postAdminDataByUrl","success","adminData","setAppInfo","_useState3","_useState4","appList","setAppList","_useState5","_useState6","openModal","setOpenModal","_useState7","_useState8","sethistoryList","_useState9","_useState10","isChanging","setIsChanging","_useState11","dataChanged","_useFiscalYearAll","useFiscalYearAll","fiscalYear","fy","fyOption","useEffect","showToast","applicationList","nameTransferHistory","map","el","objectSpread2","getDataConstructionType","handleConfirmation","handleChangeDesigner","handleClose","panes","menuItem","tab","setupHeading","render","Tab","Pane","Helmet_default","heading","formik_esm","key","onSubmit","values","actions","setSubmitting","api","namsariSetup","objName","err","console","log","_ref2","handleSubmit","isSubmitting","setFieldValue","handleChange","Form","Group","widths","Field","EbpsForm","name","label","onChange","Select","needsZIndex","options","consTypeWithDefaultSelectOptions","Button","type","content","searchData","searchApp","searchResults","namsariColumns","namsariDatafield","isEmpty","Divider","time","_ref3","validateForm","globalError","message","namsariErrors","namsariNotComplete","AdminModalContainer","open","saveText","cancelText","then","confirmChange","historyHeading","NamsariHistory_NamsariHistory","ErrorDisplay","menu","secondary","pointing","NamsariSetup","parentProps","AdminContainer","updateApi","NamsariSetup_NamsariSetupComponent","assign"],"mappings":"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","file":"static/js/12.d466576b.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\nimport { Button } from 'semantic-ui-react';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tbuttonProps: {\n\t\tclass?: string;\n\t\ttitle?: string;\n\t\ticon?: string;\n\t};\n\thandleButtonClick: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericTableOneButton extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\t}\n\n\trenderButton = (row: any, htmlElement: HTMLElement) => {\n\t\tReactDOM.render(\n\t\t\t<Button\n\t\t\t\ttitle={this.props.buttonProps.title}\n\t\t\t\tonClick={() => this.props.handleButtonClick(row)}\n\t\t\t\tsize=\"tiny\"\n\t\t\t\tclassName={this.props.buttonProps.class}\n\t\t\t>\n\t\t\t\t<i aria-hidden=\"true\" className={this.props.buttonProps.icon}></i>\n\t\t\t</Button>,\n\t\t\thtmlElement\n\t\t);\n\t};\n\n\tactionColumns = [\n\t\t{\n\t\t\ttext: 'Actions',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\tcreatewidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row.boundindex, htmlElement);\n\t\t\t},\n\t\t\tinitwidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row, htmlElement);\n\t\t\t},\n\t\t\twidth: this.props.actionWidth,\n\t\t\tpinned: 'true',\n\t\t},\n\t].concat(this.props.columns);\n\n\trender() {\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericTableOneButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, List, Grid } from 'semantic-ui-react';\nimport { applicationTable } from '../../../utils/data/genericSetupData';\nimport { translateEngToNepWithZero } from '../../../utils/langUtils';\nimport { getOptionText } from '../../../utils/dataUtils';\nimport { constructionTypeSelectOptions } from '../../../utils/optionUtils';\n\nconst applicationData = applicationTable;\n\nfunction ApplicationDetails({ appInfo }) {\n\treturn (\n\t\t<Segment>\n\t\t\t<Header>{applicationData.applicationInfo}</Header>\n\t\t\t<List className=\"app-info\">\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicationId}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.nibedakName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.nibedakName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantMobileNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantMobileNo}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{translateEngToNepWithZero(appInfo.applicantDate)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantDate}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{getOptionText(appInfo.constructionType, constructionTypeSelectOptions)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.constructionType}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</List>\n\t\t</Segment>\n\t);\n}\n\nApplicationDetails.propTypes = {\n\tappInfo: PropTypes.object.isRequired,\n};\n\nexport default ApplicationDetails;\n","import * as React from 'react';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tgenerateButtonRenderer: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericSetupTable extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\n\t\tthis.buttonrenderer = this.buttonrenderer.bind(this);\n\t}\n\n\tbuttonrenderer = (row: any, columnfield: string, value: any, defaulthtml: any, columnproperties: any, rowdata: any) => {\n\t\t//@ts-ignore\n\t\treturn this.props.generateButtonRenderer(row);\n\t};\n\n\tactionColumns = [\n\t\t{ text: 'Actions', cellsalign: 'center', align: 'center', cellsrenderer: this.buttonrenderer, width: this.props.actionWidth, pinned: 'true' },\n\t].concat(this.props.columns);\n\n\trender() {\n\t\t\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericSetupTable;\n","import React, { useState } from 'react';\nimport GenericSetupTable from './forms/GenericSetupTable';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\nimport { namsariHistory, historyDatafield } from '../../utils/data/ebps-setup/namsariSetupData';\n\nexport const NamsariHistory = ({ historyList }) => {\n\tconst [historyChanged, setHistoryChanged] = useState(false);\n\n\tuseJqxNepaliFilter(historyChanged, [2, 4], []);\n\n\tconst generateViewButtonRenderer = row => {\n\t\tsetHistoryChanged(!historyChanged);\n\t\treturn '<p></p>';\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<GenericSetupTable\n\t\t\t\tdata={historyList}\n\t\t\t\tcolumns={namsariHistory}\n\t\t\t\tdatafield={historyDatafield}\n\t\t\t\tgenerateButtonRenderer={generateViewButtonRenderer}\n\t\t\t\tactionWidth={0}\n\t\t\t\tneedsAction={false}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport AdminContainer from '../../containers/base/AdminContainer';\nimport api from '../../utils/api';\nimport { useFiscalYearAll } from '../../hooks/useFiscalYear';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\nimport { showToast, isEmpty } from '../../utils/functionUtils';\nimport { Tab, Button, Divider, Header, Form } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport { applicationTable, searchData } from '../../utils/data/genericSetupData';\nimport { namsariData, namsariColumns, namsariDatafield } from '../../utils/data/ebps-setup/namsariSetupData';\nimport * as Yup from 'yup';\nimport EbpsForm, { EbpsNormalForm } from '../shared/EbpsForm';\nimport { SelectInput } from '../shared/Select';\nimport { consTypeWithDefaultSelectOptions } from '../../utils/optionUtils';\nimport { AdminModalContainer } from './AdminModalContainer';\nimport ErrorDisplay from '../shared/ErrorDisplay';\nimport ApplicationDetails from './shared/ApplicationDetails';\nimport { NamsariHistory } from './NamsariHistory';\nimport { getDataConstructionType } from '../../utils/enums/constructionType';\nimport Helmet from 'react-helmet';\nimport GenericTableOneButton from './forms/GenericTableOneButton';\n\n// const changeDesignerSchema = Yup.object().shape({\n// \t// designer: validateString,\n// \t// file: validateFile,\n// });\n\nconst applicationData = applicationTable;\nconst modalData = namsariData.modal;\n\nconst initialValues = {\n\tnibedakName: '',\n\tconstructionType: '',\n\tyear: '',\n\tkittaNo: '',\n\twardNo: '',\n\tapplicationNo: '',\n};\n\nconst NamsariSetupComponent = ({ getAfterUpdateAdminData, postAdminDataByUrl, errors, success, loading, adminData }) => {\n\tconst [appInfo, setAppInfo] = useState({});\n\tconst [appList, setAppList] = useState([]);\n\tconst [openModal, setOpenModal] = useState(false);\n\tconst [historyList, sethistoryList] = useState([]);\n\tconst [isChanging, setIsChanging] = useState(false);\n\tconst [dataChanged] = useState(false);\n\n\tconst { fy, fyOption } = useFiscalYearAll(adminData.fiscalYear, 'yearCode', true);\n\tuseJqxNepaliFilter(dataChanged, [2, 3, 4, 5]);\n\n\tuseEffect(() => {\n\t\tif (success && success.success) {\n\t\t\tshowToast('Data saved successfully');\n\t\t\tsetOpenModal(false);\n\t\t\tsetIsChanging(false);\n\t\t\tsetAppInfo({});\n\t\t}\n\t}, [success]);\n\n\tuseEffect(() => {\n\t\tadminData.applicationList && setAppList(adminData.applicationList);\n\t}, [adminData.applicationList]);\n\n\tuseEffect(() => {\n\t\tadminData.historyList &&\n\t\t\tsethistoryList(\n\t\t\t\tadminData.historyList.nameTransferHistory.map((el) => {\n\t\t\t\t\treturn { ...el, constructionType: getDataConstructionType(el.constructionType) };\n\t\t\t\t})\n\t\t\t);\n\t}, [adminData.historyList]);\n\n\tconst handleButtonClick = (id) => {\n\t\tconst row = appList[id];\n\t\thandleConfirmation(row);\n\t};\n\n\tconst handleConfirmation = (row) => {\n\t\tsetAppInfo(row);\n\t\tsetOpenModal(true);\n\t};\n\n\tconst handleChangeDesigner = () => {\n\t\tsetOpenModal(false);\n\t\tsetIsChanging(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAppInfo({});\n\t\tsetIsChanging(false);\n\t\tsetOpenModal(false);\n\t};\n\n\tconst panes = [\n\t\t{\n\t\t\tmenuItem: namsariData.tab.setupHeading,\n\t\t\trender: () => (\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{namsariData.heading}</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tkey=\"get-app-info\"\n\t\t\t\t\t\tinitialValues={{ ...initialValues, year: fy }}\n\t\t\t\t\t\t// validationSchema={searchSchema}\n\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\tactions.setSubmitting(true);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tsetAppList([]);\n\t\t\t\t\t\t\t\tgetAfterUpdateAdminData([\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tapi: `${api.namsariSetup}?applocationNo=${values.applicationNo}&nibedakName=${values.nibedakName}&constructionType=${values.constructionType}&year=${values.year}&kittaNo=${values.kittaNo}&wardNo=${values.wardNo}`,\n\t\t\t\t\t\t\t\t\t\tobjName: 'applicationList',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ handleSubmit, errors, isSubmitting, values, setFieldValue, handleChange }) => (\n\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"4\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsNormalForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"applicationNo\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.applicationId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.applicationNo}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.applicationNo}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"nibedakName\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.nibedakName}\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.nibedakName}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.nibedakName}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\t\t\tneedsZIndex={true}\n\t\t\t\t\t\t\t\t\t\t\tname=\"constructionType\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.constructionType}\n\t\t\t\t\t\t\t\t\t\t\toptions={consTypeWithDefaultSelectOptions}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectInput needsZIndex={true} name=\"year\" label={applicationData.year} options={fyOption} />\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"4\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"kittaNo\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.kittaNo}\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.kittaNo}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.kittaNo}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"wardNo\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.wardNo}\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.wardNo}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.wardNo}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"primary-btn\"\n\t\t\t\t\t\t\t\t\t\t\ticon=\"search\"\n\t\t\t\t\t\t\t\t\t\t\tcontent={searchData.searchApp}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t\t<h4>{searchData.searchResults}</h4>\n\t\t\t\t\t<GenericTableOneButton\n\t\t\t\t\t\tdata={appList}\n\t\t\t\t\t\tcolumns={namsariColumns}\n\t\t\t\t\t\tdatafield={namsariDatafield}\n\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\tclass: 'primary-table-single-btn icon',\n\t\t\t\t\t\t\ticon: 'exchange icon',\n\t\t\t\t\t\t\ttitle: 'Send for Namsari',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thandleButtonClick={handleButtonClick}\n\t\t\t\t\t\tactionWidth={80}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t{!isEmpty(appInfo) && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\tkey=\"namsari\"\n\t\t\t\t\t\t\t\t// validationSchema={changeDesignerSchema}\n\t\t\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\t\t\tactions.setSubmitting(true);\n\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tpostAdminDataByUrl(`${api.namsariSetup}/${appInfo.applicantNo}/${appInfo.time}`);\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({ handleSubmit, isSubmitting, errors: formErrors, validateForm }) => {\n\t\t\t\t\t\t\t\t\tconst globalError =\n\t\t\t\t\t\t\t\t\t\terrors && errors.message === 'PNC' ? { message: namsariData.namsariErrors.namsariNotComplete } : errors;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\t\tkey={'open-confirmation'}\n\t\t\t\t\t\t\t\t\t\t\t\topen={openModal}\n\t\t\t\t\t\t\t\t\t\t\t\terrors={globalError}\n\t\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={handleChangeDesigner}\n\t\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\n\t\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.saveText}\n\t\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{modalData.content}\n\t\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\n\t\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\t\topen={isChanging}\n\t\t\t\t\t\t\t\t\t\t\t\terrors={globalError}\n\t\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateForm().then((errors) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isEmpty(errors)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\n\t\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.confirmChange}\n\t\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ApplicationDetails appInfo={appInfo} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Tab.Pane>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tmenuItem: namsariData.tab.historyHeading,\n\t\t\trender: () => (\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{namsariData.tab.historyHeading}</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t\t<NamsariHistory historyList={historyList} />\n\t\t\t\t</Tab.Pane>\n\t\t\t),\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"setup-main\">\n\t\t\t{errors && <ErrorDisplay message={errors.message} />}\n\t\t\t<Header>{namsariData.heading}</Header>\n\t\t\t<Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n\t\t</div>\n\t);\n};\nexport const NamsariSetup = (parentProps) => (\n\t<AdminContainer\n\t\tapi={[\n\t\t\t{ api: api.fiscalYear, objName: 'fiscalYear' },\n\t\t\t{ api: api.namsariHistory, objName: 'historyList' },\n\t\t]}\n\t\tupdateApi={[{ api: api.namsariHistory, objName: 'historyList' }]}\n\t\trender={(props) => <NamsariSetupComponent {...props} parentProps={parentProps} />}\n\t/>\n);\n\nexport { NamsariSetup as default };\n"],"sourceRoot":""}