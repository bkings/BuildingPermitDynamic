{"version":3,"sources":["components/loggedInComponents/forms/inaruwa/SansodhanSuperTippaniInaruwa.js","utils/data/SansodhanTippaniInaruwaData.js"],"names":["sansodhanInaruwa","date","subject","tippani_title","content","content_1","content_2","content_3","content_4","content_5","content_6","content_7","content_8","content_9","content_10","content_11","content_12","content_13","content_14","gharOption","key","value","text","sansodhamSchema","Yup","shape","Object","assign","sansodhanDate","validateNullableNepaliDate","supStrucDate","dasturAmount","validateNumber","SansodhanTippaniInaruwa","props","_this","classCallCheck","this","_this$props","_super","call","otherData","prevData","userData","superData","getJsonData","supStruCons","userInfo","subName","getUserRole","UserType","SUB_ENGINEER","userName","initialValues1","prepareMultiInitialValues","obj","reqFields","shree","shreeOptions","ghar","isStringEmpty","getCurrentDate","initVal","merge","state","_this2","_this$props2","permitData","hasSavePermission","formUrl","hasDeletePermission","isSaveDisabled","react_default","a","createElement","errors","ErrorDisplay","message","formik_esm","initialValues","validationSchema","onSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","values","_ref","setSubmitting","wrap","_context","prev","next","applicationNo","applicantNo","postAction","api","sansodhanSuperTippaniAdesh","window","scroll","success","handleSuccess","checkError","parentProps","t0","console","log","stop","_x","_x2","apply","arguments","_ref3","handleChange","handleSubmit","isSubmitting","setFieldValue","validateForm","Form","loading","ref","setRef","LetterHead","compact","style","textAlign","DateField","label","name","error","inline","textDecoration","className","organization","newWardNo","ShreeDropdown","applicantName","oldMunicipal","sadak","kittaNo","landArea","landAreaType","constructionType","getCertificateConstructionType","Select","options","onChange","e","_ref4","DashedFormInput","NepaliNumberToWord","getNepaliWord","SaveButtonValidation","Component","SansodhanSuperTippaniInaruwa","FormContainerV2","objName","form","superStructureConstruction","onBeforeGetContent","objectSpread2","PrintParams","INLINE_FIELD","param4","param3","param5","param6","param7","prepareData","data","useInnerRef","render","SansodhanSuperTippaniInaruwa_SansodhanTippaniInaruwa"],"mappings":"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","file":"static/js/30.21156bef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Form, Select } from 'semantic-ui-react';\nimport * as Yup from 'yup';\nimport { SansodhanInaruwaData } from '../../../../utils/data/SansodhanTippaniInaruwaData';\nimport ErrorDisplay from './../../../shared/ErrorDisplay';\nimport api from '../../../../utils/api';\nimport { isStringEmpty } from './../../../../utils/stringUtils';\nimport { getCurrentDate } from './../../../../utils/dateUtils';\nimport { getJsonData, prepareMultiInitialValues, handleSuccess, checkError } from '../../../../utils/dataUtils';\nimport merge from 'lodash/merge';\nimport { LetterHeadFlex } from '../../../shared/LetterHead';\nimport { validateNullableNepaliDate, validateNumber } from '../../../../utils/validationUtils';\nimport { PrintParams } from '../../../../utils/printUtils';\nimport FormContainerV2 from '../../../../containers/base/FormContainerV2';\nimport SaveButtonValidation from './../../../shared/SaveButtonValidation';\nimport { ShreeDropdown } from './../formComponents/ShreeDropdown';\nimport { shreeOptions } from '../../../../utils/optionUtils';\nimport { DashedLangDateField, CompactDashedLangDate } from './../../../shared/DateField';\nimport { getCertificateConstructionType } from '../../../../utils/enums/constructionType';\nimport { DashedLangInput } from '../../../shared/DashedFormInput';\nimport { getUserRole } from '../../../../utils/functionUtils';\nimport { UserType } from '../../../../utils/userTypeUtils';\nimport { NepaliNumberToWord } from './../../../../utils/nepaliAmount';\nimport { DashedNormalInput } from './../../../shared/DashedFormInput';\n\nconst sansodhanInaruwa = SansodhanInaruwaData.sansodhan_data;\nconst gharOption = [\n    { key: 1, value: 'थप कोठा', text: 'थप कोठा' },\n    { key: 2, value: 'थपतला निर्माण गर्न', text: 'थपतला निर्माण गर्न' },\n    { key: 3, value: 'निर्माण गरेकोमा', text: 'निर्माण गरेकोमा' },\n];\n\nconst sansodhamSchema = Yup.object().shape(\n    Object.assign({\n        sansodhanDate: validateNullableNepaliDate,\n        supStrucDate: validateNullableNepaliDate,\n        dasturAmount: validateNumber,\n    })\n);\nclass SansodhanTippaniInaruwa extends Component {\n    constructor(props) {\n        super(props);\n        const { otherData, prevData, userData } = this.props;\n        let initialValues = {};\n        const superData = getJsonData(otherData.supStruCons);\n        let userInfo = {\n            subName: '',\n        };\n        if (getUserRole() === UserType.SUB_ENGINEER) {\n            userInfo.subName = userData.userName;\n        }\n        const initialValues1 = prepareMultiInitialValues(\n            {\n                obj: superData,\n                reqFields: ['supStrucDate'],\n            },\n            {\n                obj: userInfo,\n                reqFields: [],\n            },\n            {\n                obj: {\n                    shree: shreeOptions[0].value,\n                    ghar: gharOption[0].value,\n                },\n                reqFields: [],\n            },\n            { obj: getJsonData(prevData), reqFields: [] }\n        );\n        if (isStringEmpty(initialValues1.sansodhanDate)) {\n            initialValues1.sansodhanDate = getCurrentDate(true);\n        }\n        const initVal = merge(initialValues, initialValues1);\n        this.state = {\n            initVal\n        };\n\n    }\n    render() {\n        const { userData, permitData, prevData, hasSavePermission, formUrl, hasDeletePermission, isSaveDisabled } = this.props;\n        const { initVal } = this.state;\n        return (\n            <div>\n                {this.props.errors && <ErrorDisplay message={this.props.errors.message} />}\n                <Formik\n                    initialValues={initVal}\n                    validationSchema={sansodhamSchema}\n                    onSubmit={async (values, { setSubmitting }) => {\n                        setSubmitting(true);\n                        values.applicationNo = this.props.permitData.applicantNo;\n                        try {\n                            await this.props.postAction(api.sansodhanSuperTippaniAdesh, values, true);\n                            window.scroll(0, 0);\n                            if (this.props.success && this.props.success.success) {\n                                handleSuccess(checkError(this.props.prevData), this.props.parentProps, this.props.success);\n                            }\n                            setSubmitting(false);\n                        } catch (err) {\n                            setSubmitting(false);\n                            console.log('Error', err);\n                        }\n                    }}\n                >\n                    {({ handleChange, values, errors, handleSubmit, isSubmitting, setFieldValue, validateForm }) => (\n                        <Form loading={isSubmitting}>\n                            <div ref={this.props.setRef}>\n                                <div>\n                                    <LetterHeadFlex compact={true} userInfo={userData} />\n                                    <div style={{ textAlign: 'right' }}>\n                                        <DashedLangDateField\n                                            label={sansodhanInaruwa.date}\n                                            name=\"sansodhanDate\"\n                                            setFieldValue={setFieldValue}\n                                            error={errors.sansodhanDate}\n                                            value={values.sansodhanDate}\n                                            inline={true}\n\n                                        />\n                                    </div>\n                                    <div style={{ textAlign: 'center' }}>\n                                        <h3 >\n                                            <span style={{ textDecoration: 'underline' }}>{sansodhanInaruwa.subject}</span><br />\n                                            <span>{sansodhanInaruwa.tippani_title}</span>\n                                        </h3>\n                                    </div>\n                                    <div>\n                                        <div>\n                                            <span className=\"indent-span\">\n                                                {userData.organization.name}\n                                            </span>\n                                            {sansodhanInaruwa.content.content_1}\n                                            {permitData.newWardNo}\n                                            {sansodhanInaruwa.content.content_2}\n                                            <ShreeDropdown name=\"shree\" />{' '}\n                                            {permitData.applicantName}\n                                            {sansodhanInaruwa.content.content_3}\n                                            {permitData.oldMunicipal}\n                                            {sansodhanInaruwa.content.content_4}\n                                            {permitData.newWardNo}\n                                            {sansodhanInaruwa.content.content_5}\n                                            {permitData.sadak}\n                                            {sansodhanInaruwa.content.content_6}\n                                            {permitData.kittaNo}\n                                            {sansodhanInaruwa.content.content_7}\n                                            {permitData.landArea}{permitData.landAreaType}\n                                            {sansodhanInaruwa.content.content_8}\n                                            {permitData.constructionType && getCertificateConstructionType(permitData.constructionType)}\n                                            {sansodhanInaruwa.content.content_9}\n                                            <CompactDashedLangDate name=\"supStrucDate\" setFieldValue={setFieldValue} error={errors.supStrucDate} value={values.supStrucDate} />\n                                            {sansodhanInaruwa.content.content_10}\n                                            <Select\n                                                options={gharOption}\n                                                name=\"ghar\"\n                                                onChange={(e, { value }) => setFieldValue('ghar', value)}\n                                                value={values['ghar']}\n                                                error={errors.ghar}\n                                            />\n                                            {sansodhanInaruwa.content.content_11}\n                                            <DashedLangInput\n                                                name=\"subName\"\n                                                value={values.subName}\n                                                setFieldValue={setFieldValue}\n                                                error={errors.subName}\n                                            />\n                                            {sansodhanInaruwa.content.content_12}\n                                            <DashedNormalInput\n                                                name=\"dasturAmount\"\n                                                value={values.dasturAmount}\n                                                handleChange={handleChange}\n                                                error={errors.dasturAmount}\n                                            />\n                                            {sansodhanInaruwa.content.content_13}\n                                            {NepaliNumberToWord.getNepaliWord(values.dasturAmount)}\n                                            {sansodhanInaruwa.content.content_14}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <SaveButtonValidation\n                                errors={errors}\n                                validateForm={validateForm}\n                                formUrl={formUrl}\n                                hasSavePermission={hasSavePermission}\n                                hasDeletePermission={hasDeletePermission}\n                                isSaveDisabled={isSaveDisabled}\n                                prevData={checkError(prevData)}\n                                handleSubmit={handleSubmit}\n                            />\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}\nconst SansodhanSuperTippaniInaruwa = parentProps => (\n    <FormContainerV2\n        api={[\n            { api: api.sansodhanSuperTippaniAdesh, objName: 'sansodhanSuperTippani', form: true },\n            {\n                api: api.superStructureConstruction,\n                objName: 'supStruCons',\n                form: false,\n            },\n        ]}\n        onBeforeGetContent={{\n            ...PrintParams.INLINE_FIELD,\n            param4: ['getElementsByTagName', 'textarea', 'value'],\n            param3: ['getElementsByClassName', 'ui label', 'innerText'],\n            param5: ['getElementsByClassName', 'ui dropdown', 'innerText'],\n            param6: ['getElementsByClassName', 'dashedForm-control', 'value'],\n            param7: ['getElementsByClassName', 'ui checkbox', 'value'],\n        }}\n        prepareData={data => data}\n        parentProps={parentProps}\n        useInnerRef={true}\n        render={props => <SansodhanTippaniInaruwa {...props} parentProps={parentProps} />}\n    />\n);\nexport default SansodhanSuperTippaniInaruwa;\n\n","export const SansodhanInaruwaData = {\n    sansodhan_data: {\n        date: 'मिति : ',\n        subject: 'विषय : संशोधित सुपरस्ट्रक्चर ईजाजत सम्बन्धमा ।',\n        tippani_title: 'टिप्पणी-आदेश',\n        content: {\n            content_1: 'वडा नं.',\n            content_2: 'बस्ने ',\n            content_3: 'ले नीजको नाममा दर्ता रहेको साविक ',\n            content_4: 'हालको वडा नं. ',\n            content_5: 'सडक ',\n            content_6: 'को कि नं.',\n            content_7: 'क्षेत्रफल ',\n            content_8: 'मा ',\n            content_9: ' निर्माण गर्न मिति ',\n            content_10: 'मा सुपरस्ट्रक्चर इजाजत लिनुभएकोमा सो घर ',\n            content_11: 'संशोधित नक्सा बनाई संशोधित सुपरस्ट्रक्चर ईजाजत माग गर्दै निवेदन दिन भएकोले संशोधित ईजाजत दिने सम्बन्धमा यस कार्यालयका प्राविधिक सव ई. श्री ',\n            content_12: 'वाट स्थलगत निरीक्षण गरी दिनु भएको प्रतिवेदन र नीजको संलग्न नक्सा थप दस्तुर रू.',\n            content_13: 'अक्षरेपी ',\n            content_14: ' लिई माग अनुसार संशोधित सुपरस्ट्रक्चर इजाजत दिन उपयुक्त देखि निर्णयको लागी प्रेषित ।',\n\n        }\n    }\n}"],"sourceRoot":""}