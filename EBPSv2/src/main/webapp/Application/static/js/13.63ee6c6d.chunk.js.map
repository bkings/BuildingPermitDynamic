{"version":3,"sources":["components/ebps-setup/forms/GenericTableOneButton.tsx","components/ebps-setup/shared/ApplicationDetails.js","components/ebps-setup/forms/GenericSetupTable.tsx","utils/data/ebps-setup/tallaThapData.js","components/ebps-setup/TallaThapHistory.js","components/ebps-setup/TallaThapSetup.js"],"names":["GenericTableOneButton","props","_this","Object","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","tableRef","React","renderButton","row","htmlElement","ReactDOM","react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","title","buttonProps","onClick","handleButtonClick","size","className","class","aria-hidden","icon","actionColumns","text","cellsalign","align","createwidget","column","value","boundindex","initwidget","width","actionWidth","pinned","concat","columns","state","id","pageable","groupable","showfilterrow","_this$props","data","datafield","_this$props$needsActi","needsAction","_loggedInComponents_Grid_RootHistoryGrid__WEBPACK_IMPORTED_MODULE_6__","localdata","groups","rowsheight","onRowselect","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_7__","errors","loading","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_utils_data_genericSetupData__WEBPACK_IMPORTED_MODULE_5__","_utils_langUtils__WEBPACK_IMPORTED_MODULE_6__","_utils_dataUtils__WEBPACK_IMPORTED_MODULE_7__","_utils_optionUtils__WEBPACK_IMPORTED_MODULE_8__","applicationData","applicationTable","ApplicationDetails","_ref","appInfo","a","createElement","applicationInfo","Row","Column","Item","Header","applicantNo","Description","applicationId","applicantName","nibedakName","applicantMobileNo","translateEngToNepWithZero","applicantDate","getOptionText","constructionType","constructionTypeSelectOptions","GenericSetupTable","buttonrenderer","columnfield","defaulthtml","columnproperties","rowdata","generateButtonRenderer","cellsrenderer","bind","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_5__","tallaThapData","applicantAddress","applicationStatus","forwardTo","yourStatus","wardNo","kittaNo","year","assignDesigner","storeyHistory","content","saveText","confirmChange","historyNoData","cancelText","selectDesigner","selectFile","tallaThapColumns","dataField","TableWidths","APPLICATION_NO","tallaThapDatafield","name","type","tallaThapHistory","historyDatafield","TallaThapHistory","historyList","_useState","useState","_useState2","slicedToArray","fileView","setFileView","_useState3","_useState4","fileViewer","setFileViewer","_useState5","_useState6","historyChanged","setHistoryChanged","useJqxNepaliFilter","useEffect","fileViewButton","document","querySelectorAll","length","Array","from","forEach","button","dataset","application","addEventListener","handleFileViewer","removeEventListener","talathapDocument","react_default","dist_default","visible","onClose","images","src","getDocUrl","activeIndex","zIndex","changeDesignerSchema","Yup","shape","designer","validateString","file","validateFile","modalData","initialValues","applicationNo","TallaThapSetupComponent","getAfterUpdateAdminData","postAdminDataByUrl","success","adminData","designerOption","setDesignerOption","setAppInfo","appList","setAppList","_useState7","_useState8","openModal","setOpenModal","_useState9","_useState10","sethistoryList","_useState11","_useState12","isChanging","setIsChanging","_useState13","dataChanged","_useFiscalYearAll","useFiscalYearAll","fiscalYear","fy","fyOption","showToast","api","completedPermitList","objName","applicationList","designers","filter","user","userType","UserType","DESIGNER","map","loginId","userName","email","handleConfirmation","handleChangeDesigner","handleClose","panes","menuItem","render","Tab","Pane","Helmet_default","formik_esm","key","objectSpread2","onSubmit","values","actions","setSubmitting","err","console","log","_ref2","handleSubmit","isSubmitting","setFieldValue","handleChange","Form","Group","widths","Field","EbpsForm","label","onChange","Select","needsZIndex","options","Button","isEmpty","Divider","validationSchema","FormData","selectedFile","append","_ref3","formErrors","validateForm","Fragment","AdminModalContainer","open","then","error","FileUploadInput","fileCatId","hasMultipleFiles","TallaThapHistory_TallaThapHistory","ErrorDisplay","message","menu","secondary","pointing","TallaThapSetup","parentProps","AdminContainer","organizationUser","tallaThapList","updateApi","TallaThapSetup_TallaThapSetupComponent","assign"],"mappings":"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","file":"static/js/13.63ee6c6d.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\nimport { Button } from 'semantic-ui-react';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tbuttonProps: {\n\t\tclass?: string;\n\t\ttitle?: string;\n\t\ticon?: string;\n\t};\n\thandleButtonClick: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericTableOneButton extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\t}\n\n\trenderButton = (row: any, htmlElement: HTMLElement) => {\n\t\tReactDOM.render(\n\t\t\t<Button\n\t\t\t\ttitle={this.props.buttonProps.title}\n\t\t\t\tonClick={() => this.props.handleButtonClick(row)}\n\t\t\t\tsize=\"tiny\"\n\t\t\t\tclassName={this.props.buttonProps.class}\n\t\t\t>\n\t\t\t\t<i aria-hidden=\"true\" className={this.props.buttonProps.icon}></i>\n\t\t\t</Button>,\n\t\t\thtmlElement\n\t\t);\n\t};\n\n\tactionColumns = [\n\t\t{\n\t\t\ttext: 'Actions',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\tcreatewidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row.boundindex, htmlElement);\n\t\t\t},\n\t\t\tinitwidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row, htmlElement);\n\t\t\t},\n\t\t\twidth: this.props.actionWidth,\n\t\t\tpinned: 'true',\n\t\t},\n\t].concat(this.props.columns);\n\n\trender() {\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericTableOneButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, List, Grid } from 'semantic-ui-react';\nimport { applicationTable } from '../../../utils/data/genericSetupData';\nimport { translateEngToNepWithZero } from '../../../utils/langUtils';\nimport { getOptionText } from '../../../utils/dataUtils';\nimport { constructionTypeSelectOptions } from '../../../utils/optionUtils';\n\nconst applicationData = applicationTable;\n\nfunction ApplicationDetails({ appInfo }) {\n\treturn (\n\t\t<Segment>\n\t\t\t<Header>{applicationData.applicationInfo}</Header>\n\t\t\t<List className=\"app-info\">\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicationId}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.nibedakName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.nibedakName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantMobileNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantMobileNo}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{translateEngToNepWithZero(appInfo.applicantDate)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantDate}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{getOptionText(appInfo.constructionType, constructionTypeSelectOptions)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.constructionType}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</List>\n\t\t</Segment>\n\t);\n}\n\nApplicationDetails.propTypes = {\n\tappInfo: PropTypes.object.isRequired,\n};\n\nexport default ApplicationDetails;\n","import * as React from 'react';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tgenerateButtonRenderer: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericSetupTable extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\n\t\tthis.buttonrenderer = this.buttonrenderer.bind(this);\n\t}\n\n\tbuttonrenderer = (row: any, columnfield: string, value: any, defaulthtml: any, columnproperties: any, rowdata: any) => {\n\t\t//@ts-ignore\n\t\treturn this.props.generateButtonRenderer(row);\n\t};\n\n\tactionColumns = [\n\t\t{ text: 'Actions', cellsalign: 'center', align: 'center', cellsrenderer: this.buttonrenderer, width: this.props.actionWidth, pinned: 'true' },\n\t].concat(this.props.columns);\n\n\trender() {\n\t\t\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericSetupTable;\n","import { TableWidths } from \"../../enums/ui\";\n\nexport const tallaThapData = {\n\tapplicationInfo: {\n\t\tapplicationId: 'शाखा दर्ता नं.',\n\t\tapplicantName: 'जग्गाधनीको नाम',\n\t\tapplicantAddress: 'जग्गाधनीको ठेगाना',\n\t\tnibedakName: 'निवेदकको नाम',\n\t\tapplicantMobileNo: 'सम्पर्क फोन',\n\t\tapplicantDate: 'दर्ता मिती',\n\t\tconstructionType: 'भवनको किसिम',\n\t\tapplicationStatus: 'पूर्ण अवस्था',\n\t\tforwardTo: 'तह स्थिति',\n\t\tyourStatus: 'अवस्था',\n\t\twardNo: 'वडा',\n\t\tkittaNo: 'कित्ता नं',\n\t\tyear: 'आर्थिक बर्ष',\n\t},\n\ttallaThapInfo: {\n\t\ttitle: 'तला थप स्वीकृति',\n\t\tassignDesigner: 'डिजाइनर छान्नुहोस्',\n\t\tstoreyHistory: 'तला थप History'\n\t},\n\tmodal: {\n\t\ttitle: 'डिजाइनर छान्नुहोस्',\n\t\tcontent: 'के तपाईं यस फाईलको लागि डिजाइनर छान्न चाहानुहुन्छ?',\n\t\tsaveText: 'हुन्छ',\n\t\tconfirmChange: 'डिजाइनर छान्नुहोस्',\n\t\thistoryNoData: 'कुनै पनि फाईल डिजाइनरलाई तोकिएको छैन',\n\t\tcancelText: 'रद्द गर्नुहोस्',\n\t\tselectDesigner: 'डिजाइनर छान्नुहोस् ',\n\t\tselectFile: 'फाईल छान्नुहोस्'\n\t},\n};\n\nexport const tallaThapColumns = [\n\t{\n\t\ttext: 'शाखा दर्ता नं.',\n\t\tdataField: 'applicantNo',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: TableWidths.APPLICATION_NO,\n\t\tpinned: 'true',\n\t},\n\t{\n\t\ttext: 'जग्गाधनीको नाम',\n\t\tdataField: 'applicantName',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\t// width: '200',\n\t\tpinned: 'true',\n\t},\n\n\t{\n\t\ttext: 'जग्गाधनीको ठेगाना',\n\t\tdataField: 'applicantAddress',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\t{\n\t\ttext: 'निवेदकको नाम',\n\t\tdataField: 'nibedakName',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\t// width: '200',\n\t},\n\t{\n\t\ttext: 'सम्पर्क फोन.',\n\t\tdataField: 'applicantMobileNo',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t},\n\t{\n\t\ttext: 'दर्ता मिति',\n\t\tdataField: 'applicantDate',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '100',\n\t},\n];\n\nexport const tallaThapDatafield = [\n\t{ name: 'applicantNo', type: 'string' },\n\t{ name: 'applicantName', type: 'string' },\n\t{ name: 'applicantAddress', type: 'string' },\n\t{ name: 'nibedakName', type: 'string' },\n\t{ name: 'yourStatus', type: 'string' },\n\t{ name: 'applicantDate', type: 'string' },\n\t{ name: 'applicantMobileNo', type: 'string' },\n];\n\nexport const tallaThapHistory = [\n\t{\n\t\ttext: 'शाखा दर्ता नं.',\n\t\tdataField: 'applicantNo',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '130',\n\t\tpinned: 'true',\n\t},\n\t{\n\t\ttext: 'जग्गाधनीको नाम',\n\t\tdataField: 'applicantName',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t\tpinned: 'true',\n\t},\n\n\t{\n\t\ttext: 'Assigned By',\n\t\tdataField: 'talaThapAssignBy',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\n\t{\n\t\ttext: 'Assigned On',\n\t\tdataField: 'talaThapAssignDate',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\t{\n\t\ttext: 'Assigned To',\n\t\tdataField: 'designer',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t\twidth: '200',\n\t},\n\t{\n\t\ttext: 'Status',\n\t\tdataField: 'talathapAssign',\n\t\tcellsalign: 'center',\n\t\talign: 'center',\n\t},\n];\n\nexport const historyDatafield = [\n\t{ name: 'applicantNo', type: 'string' },\n\t{ name: 'applicantName', type: 'string' },\n\t{ name: 'talaThapAssignBy', type: 'string' },\n\t{ name: 'talaThapAssignDate', type: 'string' },\n\t{ name: 'designer', type: 'string' },\n\t{ name: 'talathapAssign', type: 'string' },\n];\n","import React, { useState, useEffect } from 'react';\nimport Viewer from 'react-viewer';\nimport { getDocUrl } from '../../utils/config';\nimport { tallaThapHistory, historyDatafield, tallaThapData } from '../../utils/data/ebps-setup/tallaThapData';\nimport GenericSetupTable from './forms/GenericSetupTable';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\n\nexport const TallaThapHistory = ({ historyList }) => {\n\tconst [fileView, setFileView] = useState('');\n\tconst [fileViewer, setFileViewer] = useState(false);\n\tconst [historyChanged, setHistoryChanged] = useState(false);\n\n\tuseJqxNepaliFilter(historyChanged, [2])\n\n\tuseEffect(() => {\n\t\tconst fileViewButton = document.querySelectorAll('.view-file');\n\t\tif (fileViewButton.length > 0) {\n\t\t\tArray.from(fileViewButton).forEach(button => {\n\t\t\t\tconst row = button.dataset.row;\n\t\t\t\tconst application = historyList[row];\n\t\t\t\tbutton.addEventListener('click', () => handleFileViewer(application));\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst fileViewButton = document.querySelectorAll('.view-file');\n\t\t\tif (fileViewButton.length > 0) {\n\t\t\t\tArray.from(fileViewButton).forEach(button => {\n\t\t\t\t\tconst row = button.dataset.row;\n\t\t\t\t\tconst application = historyList[row];\n\t\t\t\t\tbutton.removeEventListener('click', () => handleFileViewer(application));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}, [historyList, historyChanged]);\n\n\tconst generateViewButtonRenderer = row => {\n\t\tsetHistoryChanged(!historyChanged);\n\t\treturn (\n\t\t\t'<button title=\"View File\" class=\"ui primary-table-single-btn tiny icon button view-file\" data-row=' +\n\t\t\trow +\n\t\t\t'><i aria-hidden=\"true\" class=\"eye icon\"></i></button>'\n\t\t);\n\t};\n\n\tconst handleFileViewer = row => {\n\t\tsetFileView(row.talathapDocument);\n\t\tsetFileViewer(true);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h4>{tallaThapData.tallaThapInfo.storeyHistory}</h4>\n\t\t\t<Viewer\n\t\t\t\tvisible={fileViewer}\n\t\t\t\tonClose={() => setFileViewer(false)}\n\t\t\t\timages={[{ src: `${getDocUrl()}${fileView}` }]}\n\t\t\t\tactiveIndex={0}\n\t\t\t\tzIndex={10000}\n\t\t\t/>\n\t\t\t<GenericSetupTable\n\t\t\t\tdata={historyList}\n\t\t\t\tcolumns={tallaThapHistory}\n\t\t\t\tdatafield={historyDatafield}\n\t\t\t\tgenerateButtonRenderer={generateViewButtonRenderer}\n\t\t\t\tactionWidth={100}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport api from '../../utils/api';\nimport AdminContainer from '../../containers/base/AdminContainer';\nimport { Form, Button, Header, Divider, Tab } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport ErrorDisplay from '../shared/ErrorDisplay';\nimport * as Yup from 'yup';\nimport { validateString, validateFile } from '../../utils/validationUtils';\nimport { SelectInput, SearchableSelectInput } from '../shared/Select';\nimport { UserType } from '../../utils/userTypeUtils';\nimport { isEmpty, showToast } from '../../utils/functionUtils';\nimport { AdminModalContainer } from './AdminModalContainer';\nimport { FileInputWithMultiplePreview } from '../shared/FileUploadInput';\nimport { constructionTypeSelectOptions } from '../../utils/optionUtils';\nimport { useFiscalYearAll } from '../../hooks/useFiscalYear';\nimport { tallaThapData, tallaThapColumns, tallaThapDatafield } from '../../utils/data/ebps-setup/tallaThapData';\nimport EbpsForm, { EbpsNormalForm } from '../shared/EbpsForm';\nimport { TallaThapHistory } from './TallaThapHistory';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\nimport ApplicationDetails from './shared/ApplicationDetails';\nimport Helmet from 'react-helmet';\nimport GenericTableOneButton from './forms/GenericTableOneButton';\n\n// const searchSchema = Yup.object().shape({\n// \tapplicationNo: validateNormalNumber,\n// });\n\nconst changeDesignerSchema = Yup.object().shape({\n\tdesigner: validateString,\n\tfile: validateFile,\n});\n\nconst applicationData = tallaThapData.applicationInfo;\nconst modalData = tallaThapData.modal;\n\nconst initialValues = {\n\tnibedakName: '',\n\tconstructionType: '',\n\tyear: '',\n\tapplicationNo: '',\n};\n\nexport const TallaThapSetupComponent = ({ getAfterUpdateAdminData, postAdminDataByUrl, errors, success, loading, adminData }) => {\n\tconst [designerOption, setDesignerOption] = useState();\n\tconst [appInfo, setAppInfo] = useState({});\n\tconst [appList, setAppList] = useState([]);\n\tconst [openModal, setOpenModal] = useState(false);\n\tconst [historyList, sethistoryList] = useState([]);\n\tconst [isChanging, setIsChanging] = useState(false);\n\tconst [dataChanged] = useState(false);\n\n\tconst { fy, fyOption } = useFiscalYearAll(adminData.fiscalYear, 'yearCode', true);\n\tuseJqxNepaliFilter(dataChanged);\n\n\tuseEffect(() => {\n\t\tif (success && success.success) {\n\t\t\tshowToast('Data saved successfully');\n\t\t\tsetOpenModal(false);\n\t\t\tsetIsChanging(false);\n\t\t\tsetAppInfo({});\n\t\t\tsetAppList([]);\n\t\t\tgetAfterUpdateAdminData([\n\t\t\t\t{\n\t\t\t\t\tapi: `${api.completedPermitList}?applicationNo=&nibedakName=&constructionType=&year=`,\n\t\t\t\t\tobjName: 'applicationList',\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t}, [success, getAfterUpdateAdminData]);\n\n\tuseEffect(() => {\n\t\tadminData.applicationList && setAppList(adminData.applicationList);\n\t}, [adminData.applicationList]);\n\n\tuseEffect(() => {\n\t\tadminData.historyList && sethistoryList(adminData.historyList);\n\t}, [adminData.historyList]);\n\n\tuseEffect(() => {\n\t\tadminData.designers &&\n\t\t\tsetDesignerOption(\n\t\t\t\tadminData.designers\n\t\t\t\t\t.filter((user) => user.userType && user.userType.id === UserType.DESIGNER)\n\t\t\t\t\t.map((row) => {\n\t\t\t\t\t\treturn { value: row.loginId, text: `${row.userName} - ${row.email}` };\n\t\t\t\t\t})\n\t\t\t);\n\t}, [adminData.designers]);\n\n\tconst handleButtonClick = (id) => {\n\t\tconst row = appList[id];\n\t\thandleConfirmation(row);\n\t};\n\n\tconst handleConfirmation = (row) => {\n\t\tsetAppInfo(row);\n\t\tsetOpenModal(true);\n\t};\n\n\tconst handleChangeDesigner = () => {\n\t\tsetIsChanging(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAppInfo({});\n\t\tsetIsChanging(false);\n\t\tsetOpenModal(false);\n\t};\n\n\tconst panes = [\n\t\t{\n\t\t\tmenuItem: 'डिजाइनर छान्नुहोस्',\n\t\t\trender: () => (\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\n\t\t\t\t\t<Helmet title={tallaThapData.tallaThapInfo.title} />\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tkey=\"get-app-info\"\n\t\t\t\t\t\tinitialValues={{ ...initialValues, year: fy }}\n\t\t\t\t\t\t// validationSchema={searchSchema}\n\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\tactions.setSubmitting(true);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tsetAppList([]);\n\t\t\t\t\t\t\t\tgetAfterUpdateAdminData([\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tapi: `${api.completedPermitList}?applicationNo=${values.applicationNo}&nibedakName=${values.nibedakName}&constructionType=${values.constructionType}&year=${values.year}`,\n\t\t\t\t\t\t\t\t\t\tobjName: 'applicationList',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ handleSubmit, errors, isSubmitting, values, setFieldValue, handleChange }) => (\n\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"4\">\n\t\t\t\t\t\t\t\t\t{/* <Form.Field error={!!errors.applicationNo}>\n\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"applicationNo\" placeholder=\"Enter Application Number\" />\n\t\t\t\t\t\t\t\t{errors.applicationNo && (\n\t\t\t\t\t\t\t\t\t<Label pointing prompt size=\"large\">\n\t\t\t\t\t\t\t\t\t\t{errors.applicationNo}\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Form.Field> */}\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsNormalForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"applicationNo\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.applicationId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.applicationNo}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.applicationNo}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<EbpsForm\n\t\t\t\t\t\t\t\t\t\t\tname=\"nibedakName\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.nibedakName}\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors.nibedakName}\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.nibedakName}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\t\t\tneedsZIndex={true}\n\t\t\t\t\t\t\t\t\t\t\tname=\"constructionType\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={applicationData.constructionType}\n\t\t\t\t\t\t\t\t\t\t\toptions={constructionTypeSelectOptions}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectInput needsZIndex={true} name=\"year\" label={applicationData.year} options={fyOption} />\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Button className=\"primary-btn\" icon=\"search\" content=\"Search Application\" onClick={handleSubmit} />\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t\t<h4>Search Results</h4>\n\t\t\t\t\t<GenericTableOneButton\n\t\t\t\t\t\tdata={appList}\n\t\t\t\t\t\tcolumns={tallaThapColumns}\n\t\t\t\t\t\tdatafield={tallaThapDatafield}\n\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\tclass: 'primary-table-single-btn icon',\n\t\t\t\t\t\t\ticon: 'add user icon',\n\t\t\t\t\t\t\ttitle: 'Assign Designer',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thandleButtonClick={handleButtonClick}\n\t\t\t\t\t\tactionWidth={100}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t{!isEmpty(appInfo) && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\tkey=\"assign-designer\"\n\t\t\t\t\t\t\t\tvalidationSchema={changeDesignerSchema}\n\t\t\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\t\t\tactions.setSubmitting(true);\n\t\t\t\t\t\t\t\t\tconst data = new FormData();\n\t\t\t\t\t\t\t\t\tconst selectedFile = values.file;\n\n\t\t\t\t\t\t\t\t\tif (selectedFile) {\n\t\t\t\t\t\t\t\t\t\tselectedFile.forEach((file) => data.append('file', file));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tdata.append('applicationNo', appInfo.applicantNo);\n\t\t\t\t\t\t\t\t\tdata.append('designer', values.designer);\n\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tpostAdminDataByUrl(`${api.completedPermitList}`, data);\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t\t\tconsole.log('err', err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({ handleSubmit, isSubmitting, errors: formErrors, validateForm }) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{/* // <Form> */}\n\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\tkey={'open-confirmation'}\n\t\t\t\t\t\t\t\t\t\t\topen={openModal}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit={handleChangeDesigner}\n\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\n\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.saveText}\n\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{modalData.content}\n\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\n\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\topen={isChanging}\n\t\t\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tvalidateForm().then((errors) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (isEmpty(errors)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\ttitle={modalData.title}\n\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.confirmChange}\n\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field error={!!formErrors.designer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>{modalData.selectDesigner}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SearchableSelectInput name=\"designer\" options={designerOption} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field error={!!formErrors.file}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>{modalData.selectFile}</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileInputWithMultiplePreview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileCatId={'assign-designer'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thasMultipleFiles={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t<ApplicationDetails appInfo={appInfo} />\n\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\t\t\t\t\t\t\t\t\t\t{/* // </Form> */}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Tab.Pane>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tmenuItem: 'तला थप History',\n\t\t\trender: () => (\n\t\t\t\t<Tab.Pane className=\"simple-tab-pane\">\n\t\t\t\t\t<Helmet title={tallaThapData.tallaThapInfo.storeyHistory} />\n\t\t\t\t\t<TallaThapHistory historyList={historyList} />\n\t\t\t\t</Tab.Pane>\n\t\t\t),\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"setup-main\">\n\t\t\t{errors && <ErrorDisplay message={errors.message} />}\n\t\t\t<Header>{tallaThapData.tallaThapInfo.title}</Header>\n\t\t\t<Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n\t\t</div>\n\t);\n};\n\nexport const TallaThapSetup = (parentProps) => (\n\t<AdminContainer\n\t\tapi={[\n\t\t\t{ api: api.organizationUser, objName: 'designers' },\n\t\t\t{ api: api.fiscalYear, objName: 'fiscalYear' },\n\t\t\t{ api: `${api.tallaThapList}?status=`, objName: 'historyList' },\n\t\t]}\n\t\tupdateApi={[{ api: `${api.tallaThapList}?status=`, objName: 'historyList' }]}\n\t\trender={(props) => <TallaThapSetupComponent {...props} parentProps={parentProps} />}\n\t/>\n);\n\nexport { TallaThapSetup as default };\n"],"sourceRoot":""}