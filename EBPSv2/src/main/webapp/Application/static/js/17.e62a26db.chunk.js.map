{"version":3,"sources":["utils/data/ebps-setup/discardSetupData.js","components/ReportList.tsx"],"names":["__webpack_require__","d","__webpack_exports__","discardData","discardHistory","historyDatafield","_enums_ui__WEBPACK_IMPORTED_MODULE_0__","modal","title","content","saveText","confirmChange","historyNoData","cancelText","tab","historyHeading","setupHeading","heading","date","reason","reasonFile","text","dataField","cellsalign","align","width","TableWidths","APPLICATION_NO","pinned","CONSTRUCTION_TYPE","filtertype","name","type","ReportList","props","_this","Object","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","call","tableRef","React","setPrintContent","value","setPrint","datafield","columns","MOBILE_NO","APPLICATION_ACTION_BY","filterType","state","id","reportData","pageable","groupable","showfilterrow","isDiscard","handlePrint","bind","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","document","concat","match","params","fyear","code","wardNo","constructionType","setState","isEmpty","reportPermits","getReportPermits","reportKey","getReportKey","parseInt","requiredRow","entries","find","row","label","getReportMapping","filterFields","getElementsByClassName","i","length","addEventListener","translate","getInputType","prevProps","removeEventListener","gridContent","current","exportdata","newWindow","window","open","pageContent","write","close","print","_this2","Mdata","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","Maindata","map","applicationFormName","getFormMasterById","applicationAction","applicationActionBy","getUserTypeValueNepali","getOptionText","constructionTypeSelectOptions","applicationStatus","applicationStatusReportOptions","react__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_20___default","a","errors","_shared_ErrorDisplay__WEBPACK_IMPORTED_MODULE_11__","message","className","ref","r","RPrint","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","Content","_loggedInComponents_Grid_RootHistoryGrid__WEBPACK_IMPORTED_MODULE_13__","Grid","localdata","source","rowsheight","onRowselect","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","color","onClick","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_10__","loading","mapDispatchToProps","res","connect","root","dashboard","ui"],"mappings":"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","file":"static/js/17.e62a26db.chunk.js","sourcesContent":["import { TableWidths } from '../../enums/ui';\r\n\r\nexport const discardData = {\r\n    modal: {\r\n        title: 'फाईल रद्द गर्नुहोस',\r\n        content: 'के तपाईं यस फाईललाई रद्द गर्न चाहानुहुन्छ?',\r\n        saveText: 'चाहन्छु',\r\n        confirmChange: 'फाईल रद्द गर्नुहोस',\r\n        historyNoData: 'रद्द गर्नको लागि अझै कुनै फाईल पठाइएको छैन।',\r\n        cancelText: 'फाईललाई रद्द गर्न चाहन्न्',\r\n    },\r\n    tab: {\r\n        historyHeading: ' रद्द गरिएको History',\r\n        setupHeading: 'रद्द गर्नको सेटप',\r\n    },\r\n    heading: 'रद्द गर्नको सेटप',\r\n    date: 'मिति: ',\r\n    reason: 'रद्द गर्ने कारण: ',\r\n    reasonFile: 'रद्द प्रक्रिया सम्बन्धित फाइल:',\r\n\r\n    // discardErrors: {\r\n    //     discardNotComplete: 'यस फाईलका लागि अघिल्लो नामसारी अझै पूर्ण भएको छैन ।',\r\n    // },\r\n};\r\n\r\nexport const discardHistory = [\r\n    {\r\n        text: 'शाखा दर्ता नं.',\r\n        dataField: 'applicationNo',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n        width: TableWidths.APPLICATION_NO,\r\n        pinned: 'true',\r\n    },\r\n    {\r\n        text: 'जग्गाधनीको नाम',\r\n        dataField: 'applicantName',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n        pinned: 'true',\r\n    },\r\n    {\r\n        text: 'जग्गाधनीको ठेगाना',\r\n        dataField: 'applicantAddress',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n    },\r\n    {\r\n        text: 'भवनको किसिम',\r\n        dataField: 'constructionType',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n        width: TableWidths.CONSTRUCTION_TYPE,\r\n        pinned: 'true',\r\n        filtertype: 'list',\r\n    },\r\n    {\r\n        text: 'निवेदकको नाम ',\r\n        dataField: 'nibedakName',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n    },\r\n\r\n    {\r\n        text: 'रद्द गरिएको कारण',\r\n        dataField: 'discardReason',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n    },\r\n    {\r\n        text: 'रद्द गरिएको मिती',\r\n        dataField: 'discardDate',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n    },\r\n    {\r\n        text: 'दर्ता मिति',\r\n        dataField: 'applicantDate',\r\n        cellsalign: 'center',\r\n        align: 'center',\r\n        width: '100',\r\n    },\r\n];\r\n\r\nexport const historyDatafield = [\r\n    { name: 'applicationNo', type: 'string' },\r\n    { name: 'applicantName', type: 'string' },\r\n    { name: 'applicantAddress', type: 'string' },\r\n    { name: 'constructionType', type: 'string' },\r\n    { name: 'nibedakName', type: 'string' },\r\n    { name: 'discardReason', type: 'string' },\r\n    { name: 'discardDate', type: 'string' },\r\n    { name: 'applicantDate', type: 'string' }\r\n\r\n];\r\n\r\nexport const discardYear = [\r\n    { value: 2076, text: 2076 },\r\n    { value: 2077, text: 2077 },\r\n    { value: 2078, text: 2078 },\r\n    { value: 2079, text: 2079 },\r\n];\r\n","import * as React from 'react';\r\nimport { Header, Button } from 'semantic-ui-react';\r\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\r\nimport { connect } from 'react-redux';\r\nimport FallbackComponent from './shared/FallbackComponent';\r\nimport ErrorDisplay from './shared/ErrorDisplay';\r\nimport { getReportPermits } from './../store/actions/ReportActions';\r\nimport RootHistoryGrid from './loggedInComponents/Grid/RootHistoryGrid';\r\nimport { isEmpty, getUserTypeValueNepali } from './../utils/functionUtils';\r\nimport { setPrint } from '../store/actions/general';\r\nimport { UIState } from '../interfaces/ReduxInterfaces';\r\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\r\nimport { getInputType, translate } from '../utils/langUtils';\r\nimport { TableWidths } from '../utils/enums/ui';\r\nimport { getOptionText } from '../utils/dataUtils';\r\nimport { historyDatafield, discardHistory } from '../utils/data/ebps-setup/discardSetupData';\r\nimport Helmet from 'react-helmet';\r\nimport { getFormMasterById } from '../utils/urlUtils';\r\nimport { constructionTypeSelectOptions, applicationStatusReportOptions } from '../utils/optionUtils';\r\nimport { getReportMapping, getReportKey } from '../utils/reportUtils';\r\n\r\ninterface IState {\r\n\tid: string;\r\n\treportData: IReportState;\r\n\tpageable: boolean;\r\n\tgroupable: boolean;\r\n\tshowfilterrow: boolean;\r\n\tisDiscard: boolean;\r\n}\r\ninterface IReportState {\r\n\tid: number;\r\n\tname: string;\r\n\tvalue: [];\r\n}\r\n\r\ninterface IComponentProps {\r\n\treportPermits: {};\r\n\tgetReportPermits(fy: string, wardNo: string, constructionType: string): void;\r\n}\r\n\r\nclass ReportList extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\r\n\tprivate tableRef = React.createRef<JqxGrid>();\r\n\r\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\treportData: { id: 0, name: '', value: [] },\r\n\t\t\tpageable: true,\r\n\t\t\tgroupable: true,\r\n\t\t\tshowfilterrow: true,\r\n\t\t\tisDiscard: false,\r\n\t\t};\r\n\r\n\t\tthis.handlePrint = this.handlePrint.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = `${document.title} - Report List`;\r\n\r\n\t\t//@ts-ignore\r\n\t\tlet id = this.props.match.params.id;\r\n\t\t//@ts-ignore\r\n\t\tlet fyear = this.props.match.params.code || 7677;\r\n\t\t//@ts-ignore\r\n\t\tlet wardNo = this.props.match.params.wardNo || '';\r\n\t\t//@ts-ignore\r\n\t\tlet constructionType = this.props.match.params.constructionType || '';\r\n\r\n\t\tthis.setState({ id });\r\n\r\n\t\tif (isEmpty(this.props.reportPermits)) {\r\n\t\t\tthis.props.getReportPermits(fyear, wardNo === 'allWards' ? '' : wardNo, constructionType === 'all' ? '' : constructionType);\r\n\t\t} else {\r\n\t\t\tconst reportKey = getReportKey(parseInt(id));\r\n\t\t\tconst requiredRow = Object.entries(this.props.reportPermits).find(row => {\r\n\t\t\t\treturn row[0] === reportKey;\r\n\t\t\t});\r\n\r\n\t\t\tif (requiredRow) {\r\n\t\t\t\tconst { label } = getReportMapping(requiredRow[0]);\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\treportData: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tname: label,\r\n\t\t\t\t\t\tvalue: requiredRow[1],\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisDiscard: requiredRow[0] === 'discard',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tconst filterFields = document.getElementsByClassName('jqx-filter-input');\r\n\r\n\t\t\tfor (var i = 1; i <= filterFields.length; i++) {\r\n\t\t\t\tif (filterFields[i]) {\r\n\t\t\t\t\tfilterFields[i].addEventListener('input', function() {\r\n\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\tthis.value = translate(this.value, getInputType());\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//@ts-ignore\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.reportPermits && this.props.reportPermits !== prevProps.reportPermits) {\r\n\t\t\tconst reportKey = getReportKey(parseInt(this.state.id));\r\n\r\n\t\t\tconst requiredRow = Object.entries(this.props.reportPermits).find(row => {\r\n\t\t\t\treturn row[0] === reportKey;\r\n\t\t\t});\r\n\r\n\t\t\tif (requiredRow) {\r\n\t\t\t\tconst { label } = getReportMapping(requiredRow[0]);\r\n\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\treportData: {\r\n\t\t\t\t\t\tid: this.state.id,\r\n\t\t\t\t\t\tname: label,\r\n\t\t\t\t\t\tvalue: requiredRow[1],\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisDiscard: requiredRow[0] === 'discard',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst filterFields = document.getElementsByClassName('jqx-filter-input');\r\n\r\n\t\tfor (var i = 1; i <= filterFields.length; i++) {\r\n\t\t\tif (filterFields[i]) {\r\n\t\t\t\tfilterFields[i].addEventListener('input', function() {\r\n\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\tthis.value = translate(this.value, getInputType());\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconst filterFields = document.getElementsByClassName('jqx-filter-input');\r\n\t\tfor (var i = 1; i <= filterFields.length; i++) {\r\n\t\t\tif (filterFields[i]) {\r\n\t\t\t\tfilterFields[i].removeEventListener('input', function() {\r\n\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\tthis.value = translate(this.value, getInputType());\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.title = 'EBPS';\r\n\t}\r\n\r\n\tsetPrintContent = (value: any) => {\r\n\t\tsetPrint(value);\r\n\t};\r\n\r\n\tdatafield = [\r\n\t\t{ name: 'applicantNo', type: 'string' },\r\n\t\t{ name: 'applicantName', type: 'string' },\r\n\t\t{ name: 'applicantAddress', type: 'string' },\r\n\t\t{ name: 'nibedakName', type: 'string' },\r\n\t\t{ name: 'applicantMobileNo', type: 'string' },\r\n\t\t{ name: 'applicationStatus', type: 'string' },\r\n\t\t{ name: 'applicationActionBy', type: 'string' },\r\n\t\t//{ name: 'yourStatus', type: 'string' },\r\n\t\t{ name: 'applicationFormName', type: 'string' },\r\n\t\t{ name: 'applicantDate', type: 'string' },\r\n\t\t{ name: 'constructionType', type: 'string' },\r\n\t\t//{ name: 'forwardTo', type: 'string' },\r\n\t];\r\n\r\n\tcolumns = [\r\n\t\t{\r\n\t\t\ttext: 'शाखा दर्ता नं.',\r\n\t\t\tdataField: 'applicantNo',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: TableWidths.APPLICATION_NO,\r\n\t\t\tpinned: 'true',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'जग्गाधनीको नाम',\r\n\t\t\tdataField: 'applicantName',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: '150',\r\n\t\t\tpinned: 'true',\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttext: 'जग्गाधनीको ठेगाना',\r\n\t\t\tdataField: 'applicantAddress',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: '150',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'निवेदकको नाम',\r\n\t\t\tdataField: 'nibedakName',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: '150',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'सम्पर्क फोन.',\r\n\t\t\tdataField: 'applicantMobileNo',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: TableWidths.MOBILE_NO,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'तह',\r\n\t\t\tdataField: 'applicationActionBy',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: TableWidths.APPLICATION_ACTION_BY,\r\n\t\t\tfilterType: 'list',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'स्थिति फारम',\r\n\t\t\tdataField: 'applicationFormName',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\tfilterType: 'list',\r\n\t\t\t// width: '300',\r\n\t\t\t// cellclassname: 'alignment',\r\n\t\t\t// cellsrenderer: (row: any, columnfield: any, value: any, defaulthtml: any, columnproperties: any, rowdata: any): any => value.formName,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'अवस्था',\r\n\t\t\tdataField: 'applicationStatus',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: '120',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'दर्ता मिती.',\r\n\t\t\tdataField: 'applicantDate',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: '100',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'भवनको किसिम',\r\n\t\t\tdataField: 'constructionType',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\twidth: TableWidths.CONSTRUCTION_TYPE,\r\n\t\t\tpinned: 'true',\r\n\t\t\tfilterType: 'list',\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttext: 'तह स्थिति',\r\n\t\t// \tdataField: 'forwardTo',\r\n\t\t// \tcellsalign: 'center',\r\n\t\t// \talign: 'center',\r\n\t\t// \twidth: '250',\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttext: 'पूर्ण अवस्था',\r\n\t\t// \tdataField: 'yourStatus',\r\n\t\t// \tcellsalign: 'center',\r\n\t\t// \talign: 'center',\r\n\t\t// \twidth: '120',\r\n\t\t// },\r\n\t];\r\n\r\n\tprivate handlePrint(title: string) {\r\n\t\tconst gridContent = this.tableRef.current!.exportdata('html');\r\n\t\tconst newWindow = window.open('', '', 'width=800, height=500');\r\n\t\tconst document = newWindow!.document.open();\r\n\t\tconst pageContent =\r\n\t\t\t'<!DOCTYPE html>\\n' +\r\n\t\t\t'<html>\\n' +\r\n\t\t\t'<head>\\n' +\r\n\t\t\t'<meta charset=\"utf-8\" />\\n' +\r\n\t\t\t`<title>${title} रिपोर्ट</title>\\n` +\r\n\t\t\t'</head>\\n' +\r\n\t\t\t'<body>\\n' +\r\n\t\t\t'<h3>' +\r\n\t\t\ttitle +\r\n\t\t\t' रिपोर्ट</h3>' +\r\n\t\t\tgridContent +\r\n\t\t\t'\\n</body>\\n</html>';\r\n\t\tdocument.write(pageContent);\r\n\t\tdocument.close();\r\n\t\tnewWindow!.print();\r\n\t}\r\n\r\n\trender() {\r\n\t\t//@ts-ignore\r\n\t\tconst { reportPermits } = this.props;\r\n\r\n\t\t//@ts-ignore\r\n\t\tlet Mdata = { ...this.state.reportData } || [];\r\n\t\tlet Id = this.state.id;\r\n\r\n\t\tif (reportPermits) {\r\n\t\t\t//@ts-ignore\r\n\t\t\t// const Mdata = Object.keys(reportPermits).map((m: any, index) => {\r\n\t\t\t// \treturn {\r\n\t\t\t// \t\tid: index,\r\n\t\t\t// \t\tName: m,\r\n\t\t\t// \t\tvalue: reportPermits[m],\r\n\t\t\t// \t};\r\n\t\t\t// });\r\n\r\n\t\t\tlet Maindata = Mdata;\r\n\r\n\t\t\t//@ts-ignore\r\n\t\t\tMaindata.value = Maindata.value.map((row: any) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...row,\r\n\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\tapplicationFormName: getFormMasterById(row.applicationAction).name,\r\n\t\t\t\t\tapplicationActionBy: getUserTypeValueNepali(row.applicationActionBy),\r\n\t\t\t\t\tconstructionType: getOptionText(row.constructionType, constructionTypeSelectOptions),\r\n\t\t\t\t\tapplicationStatus: getOptionText(row.applicationStatus, applicationStatusReportOptions),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Helmet title={Maindata.name} />\r\n\t\t\t\t\t{// for props.errors\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tthis.props.errors && (\r\n\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t<ErrorDisplay message={this.props.errors.message} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\r\n\t\t\t\t\t\t{/* \r\n                    \t\t//@ts-ignore */}\r\n\t\t\t\t\t\t<div ref={r => (this.RPrint = r)}>\r\n\t\t\t\t\t\t\t<Header>\r\n\t\t\t\t\t\t\t\t{/* <Header.Content>{Maindata && Maindata.name}</Header.Content> */}\r\n\t\t\t\t\t\t\t\t<Header.Content>{Maindata && Maindata.name}</Header.Content>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t<div className=\"pointer jqx-tables\">\r\n\t\t\t\t\t\t\t\t{/* \r\n              \t\t\t\t// @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{this.state.isDiscard ? (\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t<RootHistoryGrid\r\n\t\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tGrid={this.tableRef}\r\n\t\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tlocaldata={Maindata.value}\r\n\t\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tsource={historyDatafield}\r\n\t\t\t\t\t\t\t\t\t\tcolumns={discardHistory}\r\n\t\t\t\t\t\t\t\t\t\t// groups={false}\r\n\t\t\t\t\t\t\t\t\t\tgroupable={false}\r\n\t\t\t\t\t\t\t\t\t\trowsheight={40}\r\n\t\t\t\t\t\t\t\t\t\t// pageable={this.state.pageable}\r\n\t\t\t\t\t\t\t\t\t\tshowfilterrow={true}\r\n\t\t\t\t\t\t\t\t\t\tonRowselect={false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t<RootHistoryGrid\r\n\t\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tGrid={this.tableRef}\r\n\t\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tlocaldata={Maindata.value}\r\n\t\t\t\t\t\t\t\t\t\tdatafield={this.datafield}\r\n\t\t\t\t\t\t\t\t\t\tcolumns={this.columns}\r\n\t\t\t\t\t\t\t\t\t\t// groups={false}\r\n\t\t\t\t\t\t\t\t\t\tgroupable={false}\r\n\t\t\t\t\t\t\t\t\t\trowsheight={40}\r\n\t\t\t\t\t\t\t\t\t\t// pageable={this.state.pageable}\r\n\t\t\t\t\t\t\t\t\t\tshowfilterrow={true}\r\n\t\t\t\t\t\t\t\t\t\tonRowselect={false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t<Button color=\"violet\" onClick={() => this.handlePrint(Maindata ? Maindata.name : '')}>\r\n\t\t\t\t\t\t\tPrint\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{/* <Printthis\r\n\t\t\t\t\t\t\tui={\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Button color=\"violet\">Print</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\tcontent={() => this.RPrint}\r\n\t\t\t\t\t\t\tonBeforeGetContent={() => {\r\n\t\t\t\t\t\t\t\tthis.setState({ pageable: false, groupable: false, showfilterrow: false }, () => {\r\n\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\tthis.RPrint = this.RPrint.cloneNode(true);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\tbrack(this.RPrint);\r\n\r\n\t\t\t\t\t\t\t\tmakeprintformat(\r\n\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\tthis.RPrint,\r\n\t\t\t\t\t\t\t\t\t'15dayspecial'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonAfterPrint={() => this.setState({ pageable: true, groupable: true, showfilterrow: true })}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetReportPermits,\r\n\tsetPrint: (res: any) => setPrint(res),\r\n};\r\n//@ts-ignore\r\nconst mapStateToProps = state => ({\r\n\treportPermits: state.root.dashboard.reportPermits,\r\n\terrors: state.root.ui.errors,\r\n\tloading: state.root.ui.loading,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);\r\n"],"sourceRoot":""}