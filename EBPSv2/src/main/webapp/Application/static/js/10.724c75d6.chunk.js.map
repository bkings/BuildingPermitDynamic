{"version":3,"sources":["components/ebps-setup/forms/GenericTableOneButton.tsx","utils/data/ebps-setup/discardSetupData.js","components/ebps-setup/shared/ApplicationDetails.js","utils/data/ebps-setup/myadThapData.js","components/ebps-setup/MyadSetup.js"],"names":["GenericTableOneButton","props","_this","Object","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","tableRef","React","renderButton","row","htmlElement","ReactDOM","react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","title","buttonProps","onClick","handleButtonClick","size","className","class","aria-hidden","icon","actionColumns","text","cellsalign","align","createwidget","column","value","boundindex","initwidget","width","actionWidth","pinned","concat","columns","state","id","pageable","groupable","showfilterrow","_this$props","data","datafield","_this$props$needsActi","needsAction","_loggedInComponents_Grid_RootHistoryGrid__WEBPACK_IMPORTED_MODULE_6__","localdata","groups","rowsheight","onRowselect","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_7__","errors","loading","__webpack_require__","d","__webpack_exports__","discardData","discardHistory","historyDatafield","_enums_ui__WEBPACK_IMPORTED_MODULE_0__","modal","content","saveText","confirmChange","historyNoData","cancelText","tab","historyHeading","setupHeading","heading","date","reason","reasonFile","dataField","TableWidths","APPLICATION_NO","CONSTRUCTION_TYPE","filtertype","name","type","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_utils_data_genericSetupData__WEBPACK_IMPORTED_MODULE_5__","_utils_langUtils__WEBPACK_IMPORTED_MODULE_6__","_utils_dataUtils__WEBPACK_IMPORTED_MODULE_7__","_utils_optionUtils__WEBPACK_IMPORTED_MODULE_8__","applicationData","applicationTable","ApplicationDetails","_ref","appInfo","a","createElement","applicationInfo","Row","Column","Item","Header","applicantNo","Description","applicationId","applicantName","nibedakName","applicantMobileNo","translateEngToNepWithZero","applicantDate","getOptionText","constructionType","constructionTypeSelectOptions","myadData","myadApproveData","changeDesignerSchema","Yup","shape","file","validateFileOptional","validateNepaliDate","modalData","intiVal1","getCurrentDate","MyadSetupComponent","postAdminDataByUrl","success","adminData","_useState","useState","_useState2","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setAppInfo","_useState3","_useState4","appList","setAppList","_useState5","_useState6","openModal","setOpenModal","_useState7","_useState8","isChanging","setIsChanging","_useState9","dataChanged","useJqxNepaliFilter","useEffect","showToast","applicationList","handleChangeDesigner","handleClose","react__WEBPACK_IMPORTED_MODULE_1___default","_shared_ErrorDisplay__WEBPACK_IMPORTED_MODULE_15__","message","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_18___default","_forms_GenericTableOneButton__WEBPACK_IMPORTED_MODULE_20__","namsariColumns","namsariDatafield","handleConfirmation","isEmpty","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","formik__WEBPACK_IMPORTED_MODULE_9__","initialValues","key","validationSchema","onSubmit","values","actions","setSubmitting","api","myadSetup","err","_ref2","handleSubmit","isSubmitting","validateForm","_AdminModalContainer__WEBPACK_IMPORTED_MODULE_14__","open","then","_shared_ApplicationDetails__WEBPACK_IMPORTED_MODULE_19__","MyadSetup","parentProps","_containers_base_AdminContainer__WEBPACK_IMPORTED_MODULE_2__","fiscalYear","objName","updateApi","render","assign"],"mappings":"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","file":"static/js/10.724c75d6.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { IDataTableProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\nimport JqxGrid from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid/react_jqxgrid';\nimport RootHistoryGrid from '../../loggedInComponents/Grid/RootHistoryGrid';\nimport FallbackComponent from '../../shared/FallbackComponent';\nimport { UIState } from '../../../interfaces/ReduxInterfaces';\nimport { Button } from 'semantic-ui-react';\n\ninterface IState {\n\tid: string;\n\tpageable: boolean;\n\tgroupable: boolean;\n\tshowfilterrow: boolean;\n}\n\ninterface IComponentProps {\n\tdata: [];\n\tcolumns: [];\n\tdatafield: [];\n\tbuttonProps: {\n\t\tclass?: string;\n\t\ttitle?: string;\n\t\ticon?: string;\n\t};\n\thandleButtonClick: (row: any) => string;\n\tactionWidth: number;\n\tneedsAction?: boolean;\n}\n\nclass GenericTableOneButton extends React.PureComponent<IDataTableProps & UIState & IComponentProps, IState> {\n\tprivate tableRef = React.createRef<JqxGrid>();\n\n\tconstructor(props: IDataTableProps & UIState & IComponentProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tpageable: true,\n\t\t\tgroupable: true,\n\t\t\tshowfilterrow: true,\n\t\t};\n\t}\n\n\trenderButton = (row: any, htmlElement: HTMLElement) => {\n\t\tReactDOM.render(\n\t\t\t<Button\n\t\t\t\ttitle={this.props.buttonProps.title}\n\t\t\t\tonClick={() => this.props.handleButtonClick(row)}\n\t\t\t\tsize=\"tiny\"\n\t\t\t\tclassName={this.props.buttonProps.class}\n\t\t\t>\n\t\t\t\t<i aria-hidden=\"true\" className={this.props.buttonProps.icon}></i>\n\t\t\t</Button>,\n\t\t\thtmlElement\n\t\t);\n\t};\n\n\tactionColumns = [\n\t\t{\n\t\t\ttext: 'Actions',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\tcreatewidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row.boundindex, htmlElement);\n\t\t\t},\n\t\t\tinitwidget: (row: any, column: any, value: string, htmlElement: HTMLElement) => {\n\t\t\t\tthis.renderButton(row, htmlElement);\n\t\t\t},\n\t\t\twidth: this.props.actionWidth,\n\t\t\tpinned: 'true',\n\t\t},\n\t].concat(this.props.columns);\n\n\trender() {\n\t\tconst { data, datafield, needsAction = true as boolean } = this.props;\n\n\t\tif (data) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"mapRegistration-dataTableList\">\n\t\t\t\t\t\t{/* \n              \t\t\t\t// @ts-ignore */}\n\t\t\t\t\t\t<RootHistoryGrid\n\t\t\t\t\t\t\t// Grid={this.tableRef}\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tlocaldata={data}\n\t\t\t\t\t\t\tdatafield={datafield}\n\t\t\t\t\t\t\tcolumns={needsAction ? this.actionColumns : this.props.columns}\n\t\t\t\t\t\t\tgroups={false}\n\t\t\t\t\t\t\t// groupable={this.state.groupable}\n\t\t\t\t\t\t\trowsheight={50}\n\t\t\t\t\t\t\tpageable={this.state.pageable}\n\t\t\t\t\t\t\tshowfilterrow={this.state.showfilterrow}\n\t\t\t\t\t\t\tonRowselect={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <FallbackComponent errors={this.props.errors} loading={this.props.loading} />;\n\t\t}\n\t}\n}\n\nexport default GenericTableOneButton;\n","import { TableWidths } from '../../enums/ui';\n\nexport const discardData = {\n    modal: {\n        title: 'फाईल रद्द गर्नुहोस',\n        content: 'के तपाईं यस फाईललाई रद्द गर्न चाहानुहुन्छ?',\n        saveText: 'चाहन्छु',\n        confirmChange: 'फाईल रद्द गर्नुहोस',\n        historyNoData: 'रद्द गर्नको लागि अझै कुनै फाईल पठाइएको छैन।',\n        cancelText: 'फाईललाई रद्द गर्न चाहन्न्',\n    },\n    tab: {\n        historyHeading: ' रद्द गरिएको History',\n        setupHeading: 'रद्द गर्नको सेटप',\n    },\n    heading: 'रद्द गर्नको सेटप',\n    date: 'मिति: ',\n    reason: 'रद्द गर्ने कारण: ',\n    reasonFile: 'रद्द प्रक्रिया सम्बन्धित फाइल:',\n\n    // discardErrors: {\n    //     discardNotComplete: 'यस फाईलका लागि अघिल्लो नामसारी अझै पूर्ण भएको छैन ।',\n    // },\n};\n\nexport const discardHistory = [\n    {\n        text: 'शाखा दर्ता नं.',\n        dataField: 'applicationNo',\n        cellsalign: 'center',\n        align: 'center',\n        width: TableWidths.APPLICATION_NO,\n        pinned: 'true',\n    },\n    {\n        text: 'जग्गाधनीको नाम',\n        dataField: 'applicantName',\n        cellsalign: 'center',\n        align: 'center',\n        pinned: 'true',\n    },\n    {\n        text: 'जग्गाधनीको ठेगाना',\n        dataField: 'applicantAddress',\n        cellsalign: 'center',\n        align: 'center',\n    },\n    {\n        text: 'भवनको किसिम',\n        dataField: 'constructionType',\n        cellsalign: 'center',\n        align: 'center',\n        width: TableWidths.CONSTRUCTION_TYPE,\n        pinned: 'true',\n        filtertype: 'list',\n    },\n    {\n        text: 'निवेदकको नाम ',\n        dataField: 'nibedakName',\n        cellsalign: 'center',\n        align: 'center',\n    },\n\n    {\n        text: 'रद्द गरिएको कारण',\n        dataField: 'discardReason',\n        cellsalign: 'center',\n        align: 'center',\n    },\n    {\n        text: 'रद्द गरिएको मिती',\n        dataField: 'discardDate',\n        cellsalign: 'center',\n        align: 'center',\n    },\n    {\n        text: 'दर्ता मिति',\n        dataField: 'applicantDate',\n        cellsalign: 'center',\n        align: 'center',\n        width: '100',\n    },\n];\n\nexport const historyDatafield = [\n    { name: 'applicationNo', type: 'string' },\n    { name: 'applicantName', type: 'string' },\n    { name: 'applicantAddress', type: 'string' },\n    { name: 'constructionType', type: 'string' },\n    { name: 'nibedakName', type: 'string' },\n    { name: 'discardReason', type: 'string' },\n    { name: 'discardDate', type: 'string' },\n    { name: 'applicantDate', type: 'string' }\n\n];\n\nexport const discardYear = [\n    { value: 2076, text: 2076 },\n    { value: 2077, text: 2077 },\n    { value: 2078, text: 2078 },\n    { value: 2079, text: 2079 },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, List, Grid } from 'semantic-ui-react';\nimport { applicationTable } from '../../../utils/data/genericSetupData';\nimport { translateEngToNepWithZero } from '../../../utils/langUtils';\nimport { getOptionText } from '../../../utils/dataUtils';\nimport { constructionTypeSelectOptions } from '../../../utils/optionUtils';\n\nconst applicationData = applicationTable;\n\nfunction ApplicationDetails({ appInfo }) {\n\treturn (\n\t\t<Segment>\n\t\t\t<Header>{applicationData.applicationInfo}</Header>\n\t\t\t<List className=\"app-info\">\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicationId}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.nibedakName}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.nibedakName}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row columns=\"3\">\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{appInfo.applicantMobileNo}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantMobileNo}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{translateEngToNepWithZero(appInfo.applicantDate)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.applicantDate}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Header>{getOptionText(appInfo.constructionType, constructionTypeSelectOptions)}</List.Header>\n\t\t\t\t\t\t\t\t<List.Description>{applicationData.constructionType}</List.Description>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</List>\n\t\t</Segment>\n\t);\n}\n\nApplicationDetails.propTypes = {\n\tappInfo: PropTypes.object.isRequired,\n};\n\nexport default ApplicationDetails;\n","export const myadData = {\n    modal: {\n        title: 'म्याद थपको लागि पठाउनुहोस्',\n        content: 'के तपाईं यस फाईललाई म्याद थप्नको लागि पठाउन चाहानुहुन्छ?',\n    },\n    tab: {\n        setupHeading: 'म्याद थप्नेको सेटप',\n    },\n    heading: 'म्याद थप्ने सेटप',\n    myadApproveData: {\n        title: 'म्याद थप्न स्वीकृत लागि पठाउनुहोस्',\n        heading: 'म्याद थप्ने स्वीकृत',\n        content: 'के तपाईं यस फाईललाई म्याद स्वीकृतको लागि पठाउन चाहानुहुन्छ?',\n    }\n};","import React, { useState, useEffect } from 'react';\nimport AdminContainer from '../../containers/base/AdminContainer';\nimport api from '../../utils/api';\nimport { useJqxNepaliFilter } from '../../hooks/useJqGridButton';\nimport { showToast, isEmpty } from '../../utils/functionUtils';\nimport { Divider, Header, Form } from 'semantic-ui-react';\nimport { Formik } from 'formik';\n// import { applicationTable } from '../../utils/data/genericSetupData';\nimport { namsariColumns, namsariDatafield } from '../../utils/data/ebps-setup/namsariSetupData';\nimport { discardData } from '../../utils/data/ebps-setup/discardSetupData';\nimport { myadData } from '../../utils/data/ebps-setup/myadThapData';\nimport * as Yup from 'yup';\n// import EbpsForm, { EbpsNormalForm } from '../shared/EbpsForm';\n// import { SelectInput } from '../shared/Select';\n// import { consTypeWithDefaultSelectOptions } from '../../utils/optionUtils';\n// import GenericSetupTable from './forms/GenericSetupTable';\nimport { AdminModalContainer } from './AdminModalContainer';\nimport ErrorDisplay from '../shared/ErrorDisplay';\n// import { getDataConstructionType } from '../../utils/enums/constructionType';\nimport { validateNepaliDate, validateFileOptional } from '../../utils/validationUtils';\nimport { getCurrentDate } from './../../utils/dateUtils';\nimport Helmet from 'react-helmet';\nimport ApplicationDetails from './shared/ApplicationDetails';\nimport GenericTableOneButton from './forms/GenericTableOneButton';\n\nconst changeDesignerSchema = Yup.object().shape({\n\tfile: validateFileOptional,\n\tdate: validateNepaliDate,\n});\n\n// // const searchSchema = Yup.object().shape({\n// // \tapplicationNo: validateNullableNormalNumber,\n// // });\n\n// const applicationData = applicationTable;\nconst modalData = discardData.modal;\n\n// const initialValues = {\n// \tnibedakName: '',\n// \tconstructionType: '',\n// \tyear: '',\n// \tkittaNo: '',\n// \twardNo: '',\n// \tapplicationNo: '',\n// };\nconst intiVal1 = {\n\tdate: getCurrentDate(),\n};\n\nconst MyadSetupComponent = ({ postAdminDataByUrl, errors, success, loading, adminData }) => {\n\tconst [appInfo, setAppInfo] = useState({});\n\tconst [appList, setAppList] = useState([]);\n\tconst [openModal, setOpenModal] = useState(false);\n\t// const [historyList, sethistoryList] = useState([]);\n\tconst [isChanging, setIsChanging] = useState(false);\n\tconst [dataChanged] = useState(false);\n\n\t// const { fy, fyOption } = useFiscalYearAll(adminData.fiscalYear, 'yearCode', true);\n\tuseJqxNepaliFilter(dataChanged, [2, 3, 4]);\n\n\tuseEffect(() => {\n\t\tif (success && success.success) {\n\t\t\tshowToast('Data saved successfully');\n\t\t\tsetOpenModal(false);\n\t\t\tsetIsChanging(false);\n\t\t\tsetAppInfo({});\n\t\t}\n\t}, [success]);\n\n\tuseEffect(() => {\n\t\tadminData.applicationList && setAppList(adminData.applicationList);\n\t}, [adminData.applicationList]);\n\n\t// useEffect(() => {\n\t//     adminData.historyList &&\n\t//         sethistoryList(\n\t//             adminData.historyList.map(el => {\n\t//                 return { ...el, constructionType: getDataConstructionType(el.constructionType) };\n\t//             })\n\t//         );\n\t// }, [adminData.historyList]);\n\n\t// useEffect(() => {\n\t// \tconst changeButtons = document.querySelectorAll('.myad-app');\n\t// \tif (changeButtons.length > 0) {\n\t// \t\tArray.from(changeButtons).forEach((button) => {\n\t// \t\t\tconst row = button.dataset.row;\n\t// \t\t\tconst application = appList[row];\n\t// \t\t\tbutton.addEventListener('click', () => handleConfirmation(application));\n\t// \t\t});\n\t// \t}\n\n\t// \treturn () => {\n\t// \t\tconst changeButtons = document.querySelectorAll('.myad-app');\n\t// \t\tif (changeButtons.length > 0) {\n\t// \t\t\tArray.from(changeButtons).forEach((button) => {\n\t// \t\t\t\tconst row = button.dataset.row;\n\t// \t\t\t\tconst application = appList[row];\n\t// \t\t\t\tbutton.removeEventListener('click', () => handleConfirmation(application));\n\t// \t\t\t});\n\t// \t\t}\n\t// \t};\n\t// }, [appList, dataChanged]);\n\n\t// const generateButtonRenderer = (row) => {\n\t// \tsetDataChanged(!dataChanged);\n\t// \treturn (\n\t// \t\t'<button title=\"म्याद थपको लागि पठाउनुहोस्\" class=\"ui primary-table-single-btn  icon button myad-app\" data-row=' +\n\t// \t\trow +\n\t// \t\t'><i aria-hidden=\"true\" class=\"list alternate icon\"></i></button>'\n\t// \t);\n\t// };\n\n\tconst handleConfirmation = (row) => {\n\t\tsetAppInfo(row);\n\t\tsetOpenModal(true);\n\t};\n\n\tconst handleChangeDesigner = () => {\n\t\tsetOpenModal(false);\n\t\tsetIsChanging(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAppInfo({});\n\t\tsetIsChanging(false);\n\t\tsetOpenModal(false);\n\t};\n\t// const discardYearHandleChange = year => {\n\t// \tgetAfterUpdateAdminData([{ api: `${api.discardHistory}?year=${year}`, objName: 'historyList' }]);\n\t// };\n\t// const panes = [\n\t//     {\n\t//         menuItem: myadData.tab.setupHeading,\n\t//         render: () => (\n\n\t//         ),\n\t//     },\n\t// ];\n\treturn (\n\t\t<div className=\"setup-main\">\n\t\t\t{errors && <ErrorDisplay message={errors.message} />}\n\t\t\t<Header>{myadData.heading}</Header>\n\t\t\t<>\n\t\t\t\t<Helmet title={myadData.heading}></Helmet>\n\t\t\t\t{/* <Formik\n                    key=\"get-app-info\"\n                    initialValues={{ ...initialValues, year: fy }}\n                    validationSchema={searchSchema}\n                    onSubmit={(values, actions) => {\n                        actions.setSubmitting(true);\n                        try {\n                            setAppList([]);\n                            getAfterUpdateAdminData([\n                                {\n                                    api: api.myadSetup,\n                                    objName: 'applicationList',\n                                },\n                            ]);\n                            actions.setSubmitting(false);\n                        } catch (err) {\n                            actions.setSubmitting(false);\n                            console.log('err', err);\n                        }\n                    }}\n                >\n                    {({ handleSubmit, errors, isSubmitting, values, setFieldValue, handleChange }) => (\n                        <Form loading={isSubmitting || loading}>\n                            <Form.Group widths=\"4\">\n                                <Form.Field>\n                                    <EbpsNormalForm\n                                        name=\"applicationNo\"\n                                        label={applicationData.applicationId}\n                                        onChange={handleChange}\n                                        error={errors.applicationNo}\n                                        value={values.applicationNo}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <EbpsForm\n                                        name=\"nibedakName\"\n                                        label={applicationData.nibedakName}\n                                        setFieldValue={setFieldValue}\n                                        errors={errors.nibedakName}\n                                        value={values.nibedakName}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <SelectInput\n                                        needsZIndex={true}\n                                        name=\"constructionType\"\n                                        label={applicationData.constructionType}\n                                        options={consTypeWithDefaultSelectOptions}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <SelectInput needsZIndex={true} name=\"year\" label={applicationData.year} options={fyOption} />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths=\"4\">\n                                <Form.Field>\n                                    <EbpsForm\n                                        name=\"kittaNo\"\n                                        label={applicationData.kittaNo}\n                                        setFieldValue={setFieldValue}\n                                        errors={errors.kittaNo}\n                                        value={values.kittaNo}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <EbpsForm\n                                        name=\"wardNo\"\n                                        label={applicationData.wardNo}\n                                        setFieldValue={setFieldValue}\n                                        errors={errors.wardNo}\n                                        value={values.wardNo}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths=\"equal\">\n                                <Form.Field>\n                                    <Button\n                                        type=\"button\"\n                                        className=\"primary-btn\"\n                                        icon=\"search\"\n                                        content={searchData.searchApp}\n                                        onClick={handleSubmit}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                        </Form>\n                    )}\n                </Formik> */}\n\t\t\t\t{/* <h4>{searchData.searchResults}</h4> */}\n\t\t\t\t<GenericTableOneButton\n\t\t\t\t\tdata={appList}\n\t\t\t\t\tcolumns={namsariColumns}\n\t\t\t\t\tdatafield={namsariDatafield}\n\t\t\t\t\thandleButtonClick={(row) => handleConfirmation(appList[row])}\n\t\t\t\t\tbuttonProps={{ class: 'primary-table-single-btn icon', title: 'म्याद थपको लागि पठाउनुहोस्', icon: 'list alternative icon' }}\n\t\t\t\t\tactionWidth={80}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t{!isEmpty(appInfo) && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={intiVal1}\n\t\t\t\t\t\t\tkey=\"assign-designer\"\n\t\t\t\t\t\t\tvalidationSchema={changeDesignerSchema}\n\t\t\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\t\t\tactions.setSubmitting(true);\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tpostAdminDataByUrl(`${api.myadSetup}/${appInfo.applicantNo}`);\n\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ handleSubmit, isSubmitting, errors, validateForm }) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\tkey={'open-confirmation'}\n\t\t\t\t\t\t\t\t\t\t\topen={openModal}\n\t\t\t\t\t\t\t\t\t\t\t// errors={errors}\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit={handleChangeDesigner}\n\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\ttitle={myadData.modal.title}\n\t\t\t\t\t\t\t\t\t\t\tsaveText={modalData.saveText}\n\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{myadData.modal.content}\n\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\n\t\t\t\t\t\t\t\t\t\t<AdminModalContainer\n\t\t\t\t\t\t\t\t\t\t\topen={isChanging}\n\t\t\t\t\t\t\t\t\t\t\t// errors={errors}\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting || loading}\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tvalidateForm().then((errors) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (isEmpty(errors)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t\t\t\t\t\t\ttitle={myadData.modal.title}\n\t\t\t\t\t\t\t\t\t\t\tsaveText={myadData.modal.title}\n\t\t\t\t\t\t\t\t\t\t\tcancelText={modalData.cancelText}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Form loading={isSubmitting || loading}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ApplicationDetails appInfo={appInfo} />\n\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t</AdminModalContainer>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</>\n\t\t</div>\n\t);\n};\nexport const MyadSetup = (parentProps) => (\n\t<AdminContainer\n\t\tapi={[\n\t\t\t{ api: api.fiscalYear, objName: 'fiscalYear' },\n\t\t\t{ api: api.myadSetup, objName: 'applicationList' },\n\t\t]}\n\t\tupdateApi={[{ api: api.myadSetup, objName: 'applicationList' }]}\n\t\trender={(props) => <MyadSetupComponent {...props} parentProps={parentProps} />}\n\t/>\n);\n\nexport { MyadSetup as default };\n"],"sourceRoot":""}