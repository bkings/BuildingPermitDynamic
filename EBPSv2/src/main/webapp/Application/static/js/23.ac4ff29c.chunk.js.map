{"version":3,"sources":["components/loggedInComponents/comment.tsx"],"names":["history_data","historyComment","hc_data","Allcomments","props","_this","Object","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","call","myGrid","React","createRef","datafield","name","type","columns","text","dataField","cellsalign","align","filtertype","width","state","commentData","userTypeMaster","prevProps","getUserTypeNepali","userType","userTypeObject","find","uT","designation","getUserTypeValueNepali","prevData","setState","assign","map","row","E_Phoenix_ebpsfdf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","JSON","parse","getLocalStorage","LSKey","USER_TYPE_ALL","getMultipleFormDataByUrl","api","allcomments","objName","form","data","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_helmet__WEBPACK_IMPORTED_MODULE_16___default","errors","_shared_ErrorDisplay__WEBPACK_IMPORTED_MODULE_14__","message","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","as","dividing","getMessage","concat","cmts","_Grid_RootGrid__WEBPACK_IMPORTED_MODULE_15__","localdata","groupable","showfilterrow","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_8__","loading","PureComponent","mapDispatchToProps","postFormDataByUrl","connect","root","formData","allComments","ui","success"],"mappings":"uRAoBMA,EAAeC,IAAeC,QAO9BC,oDACL,SAAAA,EAAYC,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACtBE,EAAAI,EAAAC,KAAAF,KAAMJ,IAsCCO,OAASC,IAAMC,YAvCAR,EA+CvBS,UAAY,CACX,CAAEC,KAAM,OAAQC,KAAM,UACtB,CAAED,KAAM,aAAcC,KAAM,UAC5B,CAAED,KAAM,aAAcC,KAAM,UAC5B,CAAED,KAAM,SAAUC,KAAM,UACxB,CAAED,KAAM,WAAYC,KAAM,UAC1B,CAAED,KAAM,aAAcC,KAAM,UAC5B,CAAED,KAAM,UAAWC,KAAM,UACzB,CAAED,KAAM,SAAUC,KAAM,WAvDFX,EA0DvBY,QAAU,CACT,CACCC,KAAM,8CACNC,UAAW,OAEXC,WAAY,SACZC,MAAO,SACPC,WAAY,QAEb,CACCJ,KAAM,2BACNJ,UAAW,aACXS,MAAO,KACPH,WAAY,SACZC,MAAO,UAER,CACCH,KAAM,qBACNJ,UAAW,aACXS,MAAO,KACPH,WAAY,SACZC,MAAO,UAER,CACCH,KAAM,sHACNJ,UAAW,WACXS,MAAO,MACPH,WAAY,SACZC,MAAO,SACPC,WAAY,QA7BJ,CAgCT,CACCJ,KAAM,oGACNJ,UAAW,aACXS,MAAO,MACPH,WAAY,SACZC,MAAO,UAER,CACCH,KAAM,6CACNJ,UAAW,UACXS,MAAO,MACPH,WAAY,SACZC,MAAO,UAER,CACCH,KAAM,uCACNJ,UAAW,SACXS,MAAO,MACPH,WAAY,SACZC,MAAO,WA3GRhB,EAAKmB,MAAQ,CACZC,YAAa,GACbC,eAAgB,IAJKrB,iEASJsB,GAAW,IACrBD,EAAmBlB,KAAKgB,MAAxBE,eACFE,EAAoB,SAACC,GAC1B,IAAMC,EAAiBJ,EAAeK,KAAK,SAACC,GAAD,OAAQA,EAAGH,WAAaA,IACnE,GAAIC,EACH,OAAOA,EAAeG,YAEtBC,YAAuBL,IAKrBrB,KAAKJ,MAAM+B,WAAaR,EAAUQ,UAErC3B,KAAK4B,SAAS,CACbX,YAAanB,OAAO+B,OACnB,GAEA7B,KAAKJ,MAAM+B,SAASG,IAAI,SAACC,GACxB,OAAOjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAA,GACHiC,GADJ,IAECV,SAAUD,EAAkBW,EAAIV,6DAWrC,IAAMH,EAAiBe,KAAKC,MAAMC,YAAgBC,IAAMC,gBACxDrC,KAAK4B,SAAS,CAAEV,mBAEhBlB,KAAKJ,MAAM0C,yBAAyB,CAAC,CAAEC,IAAKA,IAAIC,YAAaC,QAAS,cAAeC,MAAM,IAAS,SAACC,GAAD,OAAUA,qCAsE9G,OAAI3C,KAAKJ,MAAM+B,SAEbiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KACCD,EAAAC,EAAAC,cAAA,8BAMA9C,KAAKJ,MAAMqD,QAEXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAcC,QAASnD,KAAKJ,MAAMqD,OAAOE,UAE1CP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,GACtBC,YAAU,GAAAC,OAxIC,yBAwID,SAAsBhE,EAAaiE,OAK/Cb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAECC,UAAW3D,KAAKgB,MAAMC,YACtBX,UAAWN,KAAKM,UAChBG,QAAST,KAAKS,QACdmD,WAAW,EACXC,eAAe,KAMjBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAECC,QAAS/D,KAAKJ,MAAMmE,QAEpBd,OAAQjD,KAAKJ,MAAMqD,gBAvJE7C,IAAM4D,eAoK1BC,EAAqB,CAAE3B,6BAA0B4B,uBAExCC,sBARS,SAACnD,GAAD,MAAY,CACnCW,SAAUX,EAAMoD,KAAKC,SAASC,YAC9BP,QAAS/C,EAAMoD,KAAKG,GAAGR,QACvBd,OAAQjC,EAAMoD,KAAKG,GAAGtB,OACtBuB,QAASxD,EAAMoD,KAAKC,SAASG,UAIUP,EAAzBE,CAA6CxE","file":"static/js/23.ac4ff29c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { getUserTypeValueNepali } from '../../utils/functionUtils';\r\nimport FallbackComponent from '../shared/FallbackComponent';\r\nimport { historyComment } from '../../utils/data/headFootLangFile';\r\nimport { getMessage } from '../shared/getMessage';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { postFormDataByUrl, getMultipleFormDataByUrl } from '../../store/actions/formActions';\r\nimport JqxGrid, { IGridProps } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\r\nimport api from '../../utils/api';\r\nimport ErrorDisplay from '../shared/ErrorDisplay';\r\n// import RootGrid from \"./Grid/RootGrid\";\r\nimport RootGrid from './Grid/RootGrid';\r\nimport Helmet from 'react-helmet';\r\nimport { UserTypeMaster, UserType } from '../../utils/userTypeUtils';\r\nimport { getLocalStorage } from '../../utils/secureLS';\r\nimport { LSKey } from '../../utils/enums/localStorageKeys';\r\n\r\nconst history_data = historyComment.hc_data;\r\nconst messageId = 'historyComment.hc_data';\r\n\r\ninterface CommentState {\r\n\tcommentData: object;\r\n\tuserTypeMaster: UserTypeMaster[];\r\n}\r\nclass Allcomments extends React.PureComponent<{}, IGridProps & CommentState> {\r\n\tconstructor(props: {}) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcommentData: [],\r\n\t\t\tuserTypeMaster: [],\r\n\t\t};\r\n\t}\r\n\r\n\t//@ts-ignore\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst { userTypeMaster } = this.state;\r\n\t\tconst getUserTypeNepali = (userType: UserType) => {\r\n\t\t\tconst userTypeObject = userTypeMaster.find((uT) => uT.userType === userType);\r\n\t\t\tif (userTypeObject) {\r\n\t\t\t\treturn userTypeObject.designation;\r\n\t\t\t} else {\r\n\t\t\t\tgetUserTypeValueNepali(userType);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//@ts-ignore\r\n\t\tif (this.props.prevData !== prevProps.prevData) {\r\n\t\t\t//@ts-ignore\r\n\t\t\tthis.setState({\r\n\t\t\t\tcommentData: Object.assign(\r\n\t\t\t\t\t[],\r\n\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\tthis.props.prevData.map((row) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tuserType: getUserTypeNepali(row.userType),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//@ts-ignore\r\n\tprivate myGrid = React.createRef<JqxGrid>();\r\n\tcomponentDidMount() {\r\n\t\tconst userTypeMaster = JSON.parse(getLocalStorage(LSKey.USER_TYPE_ALL));\r\n\t\tthis.setState({ userTypeMaster });\r\n\t\t//@ts-ignore\r\n\t\tthis.props.getMultipleFormDataByUrl([{ api: api.allcomments, objName: 'allComments', form: true }], (data) => data);\r\n\t}\r\n\r\n\tdatafield = [\r\n\t\t{ name: 'name', type: 'string' },\r\n\t\t{ name: 'actionDate', type: 'string' },\r\n\t\t{ name: 'actionTime', type: 'string' },\r\n\t\t{ name: 'status', type: 'string' },\r\n\t\t{ name: 'userType', type: 'string' },\r\n\t\t{ name: 'comment_by', type: 'string' },\r\n\t\t{ name: 'comment', type: 'string' },\r\n\t\t{ name: 'remark', type: 'string' },\r\n\t];\r\n\r\n\tcolumns = [\r\n\t\t{\r\n\t\t\ttext: 'फारम नाम',\r\n\t\t\tdataField: 'name',\r\n\t\t\t// width: '280',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\tfiltertype: 'list',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'मिति',\r\n\t\t\tdatafield: 'actionDate',\r\n\t\t\twidth: '90',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'समय',\r\n\t\t\tdatafield: 'actionTime',\r\n\t\t\twidth: '70',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'प्रयोगकर्ताको प्रकार',\r\n\t\t\tdatafield: 'userType',\r\n\t\t\twidth: '120',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t\tfiltertype: 'list',\r\n\t\t},\r\n\t\t,\r\n\t\t{\r\n\t\t\ttext: 'प्रयोगकर्ताको नाम',\r\n\t\t\tdatafield: 'comment_by',\r\n\t\t\twidth: '130',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'टिप्पणी',\r\n\t\t\tdatafield: 'comment',\r\n\t\t\twidth: '180',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: 'कैफियत',\r\n\t\t\tdatafield: 'remark',\r\n\t\t\twidth: '180',\r\n\t\t\tcellsalign: 'center',\r\n\t\t\talign: 'center',\r\n\t\t},\r\n\t];\r\n\trender() {\r\n\t\t//@ts-ignore\r\n\t\tif (this.props.prevData) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"view-Form\">\r\n\t\t\t\t\t<Helmet>\r\n\t\t\t\t\t\t<title>\r\n\t\t\t\t\t\t\tAll Comments\r\n\t\t\t\t\t\t</title>\r\n\t\t\t\t\t</Helmet>\r\n\t\t\t\t\t{/* \r\n        //@ts-ignore */}\r\n\t\t\t\t\t{this.props.errors && (\r\n\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t<ErrorDisplay message={this.props.errors.message} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Header as=\"h3\" dividing>\r\n\t\t\t\t\t\t{getMessage(`${messageId}.cmts`, history_data.cmts)}\r\n\t\t\t\t\t</Header>\r\n\r\n\t\t\t\t\t{/* \r\n        //@ts-ignore */}\r\n\t\t\t\t\t<RootGrid\r\n\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\tlocaldata={this.state.commentData}\r\n\t\t\t\t\t\tdatafield={this.datafield}\r\n\t\t\t\t\t\tcolumns={this.columns}\r\n\t\t\t\t\t\tgroupable={false}\r\n\t\t\t\t\t\tshowfilterrow={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<FallbackComponent\r\n\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\tloading={this.props.loading}\r\n\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\terrors={this.props.errors}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n//@ts-ignore\r\nconst mapStateToProps = (state) => ({\r\n\tprevData: state.root.formData.allComments,\r\n\tloading: state.root.ui.loading,\r\n\terrors: state.root.ui.errors,\r\n\tsuccess: state.root.formData.success,\r\n});\r\nconst mapDispatchToProps = { getMultipleFormDataByUrl, postFormDataByUrl };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Allcomments);\r\n"],"sourceRoot":""}