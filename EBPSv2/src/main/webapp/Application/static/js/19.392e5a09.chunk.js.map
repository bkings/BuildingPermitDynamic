{"version":3,"sources":["components/Report.tsx"],"names":["report_lang","Reportlang","report_data","Report","props","_this","Object","_home_irhspur_work_form_builder_projects_pebpmsfrontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","myGrid","React","updatePermits","fiscalCode","wardNo","constructionType","getReportPermits","setPrintContent","value","setPrint","datafield","name","type","column","text","dataField","cellsalign","align","width","onRowClick","e","id","args","row","boundindex","label","history","push","pathname","concat","state","isStringEmpty","organization","fiscalYearOptions","reportPermits","wardOptions","isDesigner","fetchLocalDataAndReports","LocalAPIArray","LocalAPI","FISCAL_YEAR_ALL","USER_INFO","WARD_MASTER","prevProps","fiscalYears","Array","isArray","map","year","Number","yearCode","String","yearName","setState","wardMaster","ward","allWards","userData","formatReport","_this2","_this$props","loading","errors","_this$state","react__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_24___default","a","title","formik__WEBPACK_IMPORTED_MODULE_18__","initialValues","fiscalyear","onSubmit","enableReinitialize","render","_shared_ErrorDisplay__WEBPACK_IMPORTED_MODULE_19__","message","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","centered","Row","Column","computer","mobile","tablet","textAlign","ref","r","RPrint","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","style","Content","infobarName","className","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","Field","fiscalYear","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","placeholder","options","onChange","_ref","setFieldValue","values","_ref2","consTypeWithDefaultSelectOptions","_ref3","_shared_FallbackComponent__WEBPACK_IMPORTED_MODULE_15__","jqwidgets_scripts_jqwidgets_react_tsx_jqxgrid__WEBPACK_IMPORTED_MODULE_13__","groupable","source","jqx","dataAdapter","datafields","datatype","localdata","columns","autoheight","sortable","columnsresize","rowsheight","filterable","onRowselect","_shared_Printthis__WEBPACK_IMPORTED_MODULE_10__","ui","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","color","content","onBeforeGetContent","cloneNode","brack","makeprintformat","onBeforePrint","mapDispatchToProps","getLocalDataByKey","res","withRouter","connect","root","dashboard"],"mappings":"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","file":"static/js/19.392e5a09.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Header, Button, Grid, Select, Form, Label } from 'semantic-ui-react';\nimport Printthis from './shared/Printthis';\nimport { getReportPermits, fetchLocalDataAndReports } from './../store/actions/ReportActions';\nimport { getLocalDataByKey } from './../store/actions/dashboardActions';\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { connect } from 'react-redux';\nimport FallbackComponent from './shared/FallbackComponent';\nimport { FISCAL_YEAR_ALL, USER_INFO, WARD_MASTER } from '../utils/constants';\nimport { Reportlang } from '../utils/data/ReportLang';\n// import { getFiscalYears } from \"./../store/actions/AdminAction\";\nimport { Formik } from 'formik';\nimport ErrorDisplay from './shared/ErrorDisplay';\nimport { withRouter } from 'react-router';\nimport { makeprintformat, brack, isDesigner } from './../utils/functionUtils';\nimport { setPrint } from '../store/actions/general';\nimport { FiscalYear, ReportObject, WardMaster } from '../interfaces/DashboardInterfaces';\nimport { UIState } from '../interfaces/ReduxInterfaces';\nimport { LocalAPIArray, LocalAPI } from '../utils/urlUtils';\nimport { FiscalYearOption, OptionType } from '../interfaces/OptionInterfaces';\nimport Helmet from 'react-helmet';\nimport { formatReport } from '../utils/reportUtils';\nimport { isStringEmpty } from '../utils/stringUtils';\nimport { consTypeWithDefaultSelectOptions } from '../utils/optionUtils';\nconst report_lang = Reportlang.report_data;\n\ninterface ReportListProps {\n\treportPermits: object;\n\tfiscalYears: FiscalYear[];\n\twardMaster: WardMaster[];\n\tuserData: {\n\t\torganization: {\n\t\t\tname: string;\n\t\t};\n\t};\n\tgetLocalDataByKey: (localApiArray: LocalAPIArray, needsLoading?: boolean) => {};\n\tgetReportPermits: Function;\n\tfetchLocalDataAndReports: Function;\n}\n\ninterface ReportListState {\n\tfiscalYearOptions: FiscalYearOption[];\n\twardOptions: OptionType[];\n\tfiscalCode: number;\n\twardNo: string;\n\tconstructionType: string;\n\torganization: string;\n\treportPermits: object[];\n\tisDesigner: boolean;\n}\n\nclass Report extends React.PureComponent<UIState & ReportListProps, IGridProps & ReportListState> {\n\tprivate myGrid = React.createRef<JqxGrid>();\n\n\tconstructor(props: UIState & ReportListProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\torganization: '',\n\t\t\tfiscalYearOptions: [],\n\t\t\treportPermits: [],\n\t\t\twardOptions: [],\n\t\t\tfiscalCode: 0,\n\t\t\twardNo: '',\n\t\t\tconstructionType: '',\n\t\t\tisDesigner: isDesigner(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.fetchLocalDataAndReports(\n\t\t\tnew LocalAPIArray([\n\t\t\t\tnew LocalAPI(FISCAL_YEAR_ALL, 'fiscalYears'),\n\t\t\t\tnew LocalAPI(USER_INFO, 'userData'),\n\t\t\t\tnew LocalAPI(WARD_MASTER, 'wardMaster'),\n\t\t\t])\n\t\t);\n\t}\n\n\tcomponentDidUpdate(prevProps: UIState & ReportListProps) {\n\t\tif (prevProps.fiscalYears !== this.props.fiscalYears) {\n\t\t\tif (this.props.fiscalYears && Array.isArray(this.props.fiscalYears)) {\n\t\t\t\tconst fiscalYearOptions: FiscalYearOption[] = this.props.fiscalYears.map((year: FiscalYear) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: Number(year.yearCode),\n\t\t\t\t\t\ttext: String(year.yearName),\n\t\t\t\t\t\tvalue: Number(year.yearCode),\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tthis.setState({ fiscalYearOptions, fiscalCode: fiscalYearOptions[0].value });\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.wardMaster !== this.props.wardMaster) {\n\t\t\tif (this.props.wardMaster && Array.isArray(this.props.wardMaster)) {\n\t\t\t\tconst wardOptions: OptionType[] = this.props.wardMaster\n\t\t\t\t\t.map((ward: WardMaster) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: ward.id,\n\t\t\t\t\t\t\ttext: String(ward.name),\n\t\t\t\t\t\t\tvalue: String(ward.name),\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t\t.concat({ id: '', text: report_lang.allWards, value: '' });\n\t\t\t\tthis.setState({ wardOptions, wardNo: '' });\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.userData !== this.props.userData && this.props.userData && this.props.userData.organization) {\n\t\t\tthis.setState({ organization: this.props.userData.organization.name });\n\t\t}\n\n\t\tif (prevProps.reportPermits !== this.props.reportPermits && this.props.reportPermits) {\n\t\t\tconst reportPermits: ReportObject[] = formatReport(this.props.reportPermits, this.state.isDesigner);\n\t\t\tthis.setState({ reportPermits });\n\t\t}\n\t}\n\n\tupdatePermits = (fiscalCode: number, wardNo: string, constructionType: string) => {\n\t\tthis.props.getReportPermits(fiscalCode, wardNo, constructionType);\n\t};\n\n\tsetPrintContent = (value: any) => {\n\t\tsetPrint(value);\n\t};\n\n\tdatafield = [\n\t\t{ name: 'id', type: 'string' },\n\t\t{ name: 'label', type: 'string' },\n\t\t{ name: 'count', type: 'string' },\n\t];\n\n\tcolumn = [\n\t\t{\n\t\t\ttext: 'क्र.स',\n\t\t\tdataField: 'id',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '50px',\n\t\t},\n\t\t{\n\t\t\ttext: 'निर्माणका चरण',\n\t\t\tdataField: 'label',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '400px',\n\t\t},\n\t\t{\n\t\t\ttext: 'संख्या',\n\t\t\tdataField: 'count',\n\t\t\tcellsalign: 'center',\n\t\t\talign: 'center',\n\t\t\twidth: '200px',\n\t\t},\n\t];\n\n\trender() {\n\t\tconst { loading, errors } = this.props;\n\t\tconst { fiscalYearOptions, fiscalCode, reportPermits, organization, wardNo, constructionType, wardOptions } = this.state;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Helmet title=\"EBPS - Report\" />\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\tfiscalyear: fiscalCode,\n\t\t\t\t\t\twardNo,\n\t\t\t\t\t\tconstructionType,\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={() => {}}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\trender={(props) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// for props.errors\n\t\t\t\t\t\t\t\t\terrors && <ErrorDisplay message={errors.message} />\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t<Grid centered>\n\t\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t\t<Grid.Column computer={8} mobile={16} tablet={12} textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t{/* \n                    \t\t\t\t\t\t\t\t//@ts-ignore */}\n\t\t\t\t\t\t\t\t\t\t\t<div ref={(r) => (this.RPrint = r)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Header style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Header.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{organization} {report_lang.infobarName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Header.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex-container-flex-start margin-bottom\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpaddingBottom: '5px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field className=\"item zIndexSelect compact\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{report_lang.fiscalYear}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Fiscal Year\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={fiscalYearOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"fiscalyear\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, { value }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue('fiscalyear', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ fiscalCode: Number(value) });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updatePermits(Number(value), wardNo, constructionType);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.fiscalyear}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field className=\"item zIndexSelect compact\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{report_lang.wardNo}:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={wardOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"wardNo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, { value }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue('wardNo', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ wardNo: String(value) });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updatePermits(fiscalCode, String(value), constructionType);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.wardNo}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field className=\"item zIndexSelect compact\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{report_lang.constructionType}:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={consTypeWithDefaultSelectOptions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"constructionType\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, { value }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue('constructionType', value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ constructionType: String(value) });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updatePermits(fiscalCode, wardNo, String(value));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.constructionType}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors || loading ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FallbackComponent errors={errors} loading={loading} />\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jqx-tables\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<JqxGrid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={this.myGrid}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={'650px'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroupable={this.groupable}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew jqx.dataAdapter({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdatafields: this.datafield,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdatatype: 'array',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'id',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocaldata: reportPermits,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns={this.column}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoheight={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortable={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnsresize={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowsheight={35}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterable={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRowselect={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onRowClick\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Printthis\n\t\t\t\t\t\t\t\t\t\t\t\tui={\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"violet\">Print</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={() => this.RPrint}\n\t\t\t\t\t\t\t\t\t\t\t\tonBeforeGetContent={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setPrintContent(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.RPrint = this.RPrint.cloneNode(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\tbrack(this.RPrint);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tmakeprintformat(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.RPrint,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'getElementsByClassName',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ui dropdown',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'innerText'\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonBeforePrint={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setPrintContent(false);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\t//@ts-ignore\n\tprivate onRowClick = (e) => {\n\t\t// gets selected row indexes. The method returns an Array of indexes.\n\t\t// const index = e.args.index;\n\t\tconst id = e.args.row.boundindex;\n\n\t\t//@ts-ignore\n\t\tif (e.args.row.label !== 'कुल राजस्व')\n\t\t\t//@ts-ignore\n\t\t\tthis.props.history.push({\n\t\t\t\t//@ts-ignore\n\t\t\t\tpathname: `/user/report-list/${this.state.fiscalCode}/${isStringEmpty(this.state.wardNo) ? 'allWards' : this.state.wardNo}/${\n\t\t\t\t\tisStringEmpty(this.state.constructionType) ? 'all' : this.state.constructionType\n\t\t\t\t}/${id + 1}`,\n\t\t\t\t// state: {\n\t\t\t\t// \tid: id,\n\t\t\t\t// \t//@ts-ignore\n\t\t\t\t// \tfiscalCode: this.state.fiscalCode,\n\t\t\t\t// },\n\t\t\t});\n\t};\n}\n\nconst mapDispatchToProps = {\n\tgetReportPermits,\n\tgetLocalDataByKey,\n\tfetchLocalDataAndReports,\n\tsetPrint: (res: any) => setPrint(res),\n};\n//@ts-ignore\nconst mapStateToProps = (state) => ({\n\treportPermits: state.root.dashboard.reportPermits,\n\tfiscalYears: state.root.dashboard.fiscalYears,\n\tuserData: state.root.dashboard.userData,\n\twardMaster: state.root.dashboard.wardMaster,\n\terrors: state.root.ui.errors,\n\tloading: state.root.ui.loading,\n});\n\n//@ts-ignore\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Report));\n"],"sourceRoot":""}